<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="774" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="757.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="757.00"> </text><svg id="frames" x="10" width="1180" total_samples="20332"><g><title>IOKit`iokit_user_client_trap (228 samples, 1.12%)</title><rect x="0.0000%" y="709" width="1.1214%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="228"/><text x="0.2500%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (5 samples, 0.02%)</title><rect x="1.1214%" y="597" width="0.0246%" height="15" fill="rgb(217,0,24)" fg:x="228" fg:w="5"/><text x="1.3714%" y="607.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (8 samples, 0.04%)</title><rect x="1.9624%" y="549" width="0.0393%" height="15" fill="rgb(221,193,54)" fg:x="399" fg:w="8"/><text x="2.2124%" y="559.50"></text></g><g><title>AppKit`-[NSApplication init] (8 samples, 0.04%)</title><rect x="1.9624%" y="533" width="0.0393%" height="15" fill="rgb(248,212,6)" fg:x="399" fg:w="8"/><text x="2.2124%" y="543.50"></text></g><g><title>tiny_voxel`winit::event_loop::EventLoop&lt;()&gt;::new (10 samples, 0.05%)</title><rect x="1.9624%" y="581" width="0.0492%" height="15" fill="rgb(208,68,35)" fg:x="399" fg:w="10"/><text x="2.2124%" y="591.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::new (10 samples, 0.05%)</title><rect x="1.9624%" y="565" width="0.0492%" height="15" fill="rgb(232,128,0)" fg:x="399" fg:w="10"/><text x="2.2124%" y="575.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (3 samples, 0.01%)</title><rect x="2.0165%" y="453" width="0.0148%" height="15" fill="rgb(207,160,47)" fg:x="410" fg:w="3"/><text x="2.2665%" y="463.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (3 samples, 0.01%)</title><rect x="2.0165%" y="437" width="0.0148%" height="15" fill="rgb(228,23,34)" fg:x="410" fg:w="3"/><text x="2.2665%" y="447.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (3 samples, 0.01%)</title><rect x="2.0165%" y="421" width="0.0148%" height="15" fill="rgb(218,30,26)" fg:x="410" fg:w="3"/><text x="2.2665%" y="431.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (3 samples, 0.01%)</title><rect x="2.0165%" y="405" width="0.0148%" height="15" fill="rgb(220,122,19)" fg:x="410" fg:w="3"/><text x="2.2665%" y="415.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (3 samples, 0.01%)</title><rect x="2.0165%" y="389" width="0.0148%" height="15" fill="rgb(250,228,42)" fg:x="410" fg:w="3"/><text x="2.2665%" y="399.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (3 samples, 0.01%)</title><rect x="2.0165%" y="373" width="0.0148%" height="15" fill="rgb(240,193,28)" fg:x="410" fg:w="3"/><text x="2.2665%" y="383.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (3 samples, 0.01%)</title><rect x="2.0165%" y="357" width="0.0148%" height="15" fill="rgb(216,20,37)" fg:x="410" fg:w="3"/><text x="2.2665%" y="367.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (3 samples, 0.01%)</title><rect x="2.0165%" y="341" width="0.0148%" height="15" fill="rgb(206,188,39)" fg:x="410" fg:w="3"/><text x="2.2665%" y="351.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (5 samples, 0.02%)</title><rect x="2.0165%" y="469" width="0.0246%" height="15" fill="rgb(217,207,13)" fg:x="410" fg:w="5"/><text x="2.2665%" y="479.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (7 samples, 0.03%)</title><rect x="2.0165%" y="485" width="0.0344%" height="15" fill="rgb(231,73,38)" fg:x="410" fg:w="7"/><text x="2.2665%" y="495.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::Window::new (9 samples, 0.04%)</title><rect x="2.0116%" y="581" width="0.0443%" height="15" fill="rgb(225,20,46)" fg:x="409" fg:w="9"/><text x="2.2616%" y="591.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::window::UnownedWindow::new (9 samples, 0.04%)</title><rect x="2.0116%" y="565" width="0.0443%" height="15" fill="rgb(210,31,41)" fg:x="409" fg:w="9"/><text x="2.2616%" y="575.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (9 samples, 0.04%)</title><rect x="2.0116%" y="549" width="0.0443%" height="15" fill="rgb(221,200,47)" fg:x="409" fg:w="9"/><text x="2.2616%" y="559.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (9 samples, 0.04%)</title><rect x="2.0116%" y="533" width="0.0443%" height="15" fill="rgb(226,26,5)" fg:x="409" fg:w="9"/><text x="2.2616%" y="543.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (9 samples, 0.04%)</title><rect x="2.0116%" y="517" width="0.0443%" height="15" fill="rgb(249,33,26)" fg:x="409" fg:w="9"/><text x="2.2616%" y="527.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (8 samples, 0.04%)</title><rect x="2.0165%" y="501" width="0.0393%" height="15" fill="rgb(235,183,28)" fg:x="410" fg:w="8"/><text x="2.2665%" y="511.50"></text></g><g><title>AppKit`+[NSTextInputContext processInputKeyBindings:] (3 samples, 0.01%)</title><rect x="2.0608%" y="485" width="0.0148%" height="15" fill="rgb(221,5,38)" fg:x="419" fg:w="3"/><text x="2.3108%" y="495.50"></text></g><g><title>HIToolbox`ProcessInputSourceSwitchEventCandidate (3 samples, 0.01%)</title><rect x="2.0608%" y="469" width="0.0148%" height="15" fill="rgb(247,18,42)" fg:x="419" fg:w="3"/><text x="2.3108%" y="479.50"></text></g><g><title>HIToolbox`ProcessInputSourceAnalytic (3 samples, 0.01%)</title><rect x="2.0608%" y="453" width="0.0148%" height="15" fill="rgb(241,131,45)" fg:x="419" fg:w="3"/><text x="2.3108%" y="463.50"></text></g><g><title>HIToolbox`_TISGetPhysicalKeyboardLanguage (3 samples, 0.01%)</title><rect x="2.0608%" y="437" width="0.0148%" height="15" fill="rgb(249,31,29)" fg:x="419" fg:w="3"/><text x="2.3108%" y="447.50"></text></g><g><title>HIToolbox`_TISCopyAttachedKeyboardLanguages (3 samples, 0.01%)</title><rect x="2.0608%" y="421" width="0.0148%" height="15" fill="rgb(225,111,53)" fg:x="419" fg:w="3"/><text x="2.3108%" y="431.50"></text></g><g><title>IOKit`IOHIDEventSystemClientCreateWithType (3 samples, 0.01%)</title><rect x="2.0608%" y="405" width="0.0148%" height="15" fill="rgb(238,160,17)" fg:x="419" fg:w="3"/><text x="2.3108%" y="415.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (4 samples, 0.02%)</title><rect x="2.0854%" y="485" width="0.0197%" height="15" fill="rgb(214,148,48)" fg:x="424" fg:w="4"/><text x="2.3354%" y="495.50"></text></g><g><title>AppKit`-[NSApplication terminate:] (4 samples, 0.02%)</title><rect x="2.1198%" y="389" width="0.0197%" height="15" fill="rgb(232,36,49)" fg:x="431" fg:w="4"/><text x="2.3698%" y="399.50"></text></g><g><title>AppKit`routeKeyEquivalent (5 samples, 0.02%)</title><rect x="2.1198%" y="485" width="0.0246%" height="15" fill="rgb(209,103,24)" fg:x="431" fg:w="5"/><text x="2.3698%" y="495.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (5 samples, 0.02%)</title><rect x="2.1198%" y="469" width="0.0246%" height="15" fill="rgb(229,88,8)" fg:x="431" fg:w="5"/><text x="2.3698%" y="479.50"></text></g><g><title>AppKit`-[NSMenu _performActionForItem:atIndex:fromEvent:] (5 samples, 0.02%)</title><rect x="2.1198%" y="453" width="0.0246%" height="15" fill="rgb(213,181,19)" fg:x="431" fg:w="5"/><text x="2.3698%" y="463.50"></text></g><g><title>AppKit`_NSMenuPerformActionWithHighlighting (5 samples, 0.02%)</title><rect x="2.1198%" y="437" width="0.0246%" height="15" fill="rgb(254,191,54)" fg:x="431" fg:w="5"/><text x="2.3698%" y="447.50"></text></g><g><title>AppKit`-[NSMenuItem _corePerformAction] (5 samples, 0.02%)</title><rect x="2.1198%" y="421" width="0.0246%" height="15" fill="rgb(241,83,37)" fg:x="431" fg:w="5"/><text x="2.3698%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSResponder) sendAction:to:from:] (5 samples, 0.02%)</title><rect x="2.1198%" y="405" width="0.0246%" height="15" fill="rgb(233,36,39)" fg:x="431" fg:w="5"/><text x="2.3698%" y="415.50"></text></g><g><title>CoreFoundation`-[NSMutableOrderedSet minusOrderedSet:] (3 samples, 0.01%)</title><rect x="2.1739%" y="389" width="0.0148%" height="15" fill="rgb(226,3,54)" fg:x="442" fg:w="3"/><text x="2.4239%" y="399.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _updateActiveTrackingAreasForWindowLocation:modifierFlags:] (7 samples, 0.03%)</title><rect x="2.1592%" y="405" width="0.0344%" height="15" fill="rgb(245,192,40)" fg:x="439" fg:w="7"/><text x="2.4092%" y="415.50"></text></g><g><title>AppKit`-[_NSTrackingAreaAKManager _mouseMoved:] (9 samples, 0.04%)</title><rect x="2.1542%" y="421" width="0.0443%" height="15" fill="rgb(238,167,29)" fg:x="438" fg:w="9"/><text x="2.4042%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (29 samples, 0.14%)</title><rect x="2.0608%" y="501" width="0.1426%" height="15" fill="rgb(232,182,51)" fg:x="419" fg:w="29"/><text x="2.3108%" y="511.50"></text></g><g><title>AppKit`routeMouseMovedEvent (12 samples, 0.06%)</title><rect x="2.1444%" y="485" width="0.0590%" height="15" fill="rgb(231,60,39)" fg:x="436" fg:w="12"/><text x="2.3944%" y="495.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (10 samples, 0.05%)</title><rect x="2.1542%" y="469" width="0.0492%" height="15" fill="rgb(208,69,12)" fg:x="438" fg:w="10"/><text x="2.4042%" y="479.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) _reallySendEvent:isDelayedEvent:] (10 samples, 0.05%)</title><rect x="2.1542%" y="453" width="0.0492%" height="15" fill="rgb(235,93,37)" fg:x="438" fg:w="10"/><text x="2.4042%" y="463.50"></text></g><g><title>AppKit`_routeMouseMovedEvent (10 samples, 0.05%)</title><rect x="2.1542%" y="437" width="0.0492%" height="15" fill="rgb(213,116,39)" fg:x="438" fg:w="10"/><text x="2.4042%" y="447.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (30 samples, 0.15%)</title><rect x="2.0608%" y="533" width="0.1476%" height="15" fill="rgb(222,207,29)" fg:x="419" fg:w="30"/><text x="2.3108%" y="543.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::app::send_event (30 samples, 0.15%)</title><rect x="2.0608%" y="517" width="0.1476%" height="15" fill="rgb(206,96,30)" fg:x="419" fg:w="30"/><text x="2.3108%" y="527.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (3 samples, 0.01%)</title><rect x="2.2280%" y="517" width="0.0148%" height="15" fill="rgb(218,138,4)" fg:x="453" fg:w="3"/><text x="2.4780%" y="527.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (3 samples, 0.01%)</title><rect x="2.2280%" y="501" width="0.0148%" height="15" fill="rgb(250,191,14)" fg:x="453" fg:w="3"/><text x="2.4780%" y="511.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (3 samples, 0.01%)</title><rect x="2.2280%" y="485" width="0.0148%" height="15" fill="rgb(239,60,40)" fg:x="453" fg:w="3"/><text x="2.4780%" y="495.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (3 samples, 0.01%)</title><rect x="2.2280%" y="469" width="0.0148%" height="15" fill="rgb(206,27,48)" fg:x="453" fg:w="3"/><text x="2.4780%" y="479.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (3 samples, 0.01%)</title><rect x="2.2280%" y="453" width="0.0148%" height="15" fill="rgb(225,35,8)" fg:x="453" fg:w="3"/><text x="2.4780%" y="463.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (3 samples, 0.01%)</title><rect x="2.2280%" y="437" width="0.0148%" height="15" fill="rgb(250,213,24)" fg:x="453" fg:w="3"/><text x="2.4780%" y="447.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (3 samples, 0.01%)</title><rect x="2.2280%" y="421" width="0.0148%" height="15" fill="rgb(247,123,22)" fg:x="453" fg:w="3"/><text x="2.4780%" y="431.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (3 samples, 0.01%)</title><rect x="2.2280%" y="405" width="0.0148%" height="15" fill="rgb(231,138,38)" fg:x="453" fg:w="3"/><text x="2.4780%" y="415.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (3 samples, 0.01%)</title><rect x="2.2575%" y="501" width="0.0148%" height="15" fill="rgb(231,145,46)" fg:x="459" fg:w="3"/><text x="2.5075%" y="511.50"></text></g><g><title>AE`aeProcessAppleEvent (3 samples, 0.01%)</title><rect x="2.2575%" y="485" width="0.0148%" height="15" fill="rgb(251,118,11)" fg:x="459" fg:w="3"/><text x="2.5075%" y="495.50"></text></g><g><title>AE`0x0000000190f526bc (3 samples, 0.01%)</title><rect x="2.2575%" y="469" width="0.0148%" height="15" fill="rgb(217,147,25)" fg:x="459" fg:w="3"/><text x="2.5075%" y="479.50"></text></g><g><title>AE`0x0000000190f52768 (3 samples, 0.01%)</title><rect x="2.2575%" y="453" width="0.0148%" height="15" fill="rgb(247,81,37)" fg:x="459" fg:w="3"/><text x="2.5075%" y="463.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (3 samples, 0.01%)</title><rect x="2.2575%" y="437" width="0.0148%" height="15" fill="rgb(209,12,38)" fg:x="459" fg:w="3"/><text x="2.5075%" y="447.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (3 samples, 0.01%)</title><rect x="2.2575%" y="421" width="0.0148%" height="15" fill="rgb(227,1,9)" fg:x="459" fg:w="3"/><text x="2.5075%" y="431.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (3 samples, 0.01%)</title><rect x="2.2575%" y="405" width="0.0148%" height="15" fill="rgb(248,47,43)" fg:x="459" fg:w="3"/><text x="2.5075%" y="415.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (3 samples, 0.01%)</title><rect x="2.2575%" y="389" width="0.0148%" height="15" fill="rgb(221,10,30)" fg:x="459" fg:w="3"/><text x="2.5075%" y="399.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (3 samples, 0.01%)</title><rect x="2.2575%" y="373" width="0.0148%" height="15" fill="rgb(210,229,1)" fg:x="459" fg:w="3"/><text x="2.5075%" y="383.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (3 samples, 0.01%)</title><rect x="2.2575%" y="357" width="0.0148%" height="15" fill="rgb(222,148,37)" fg:x="459" fg:w="3"/><text x="2.5075%" y="367.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (3 samples, 0.01%)</title><rect x="2.2575%" y="341" width="0.0148%" height="15" fill="rgb(234,67,33)" fg:x="459" fg:w="3"/><text x="2.5075%" y="351.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (3 samples, 0.01%)</title><rect x="2.2575%" y="325" width="0.0148%" height="15" fill="rgb(247,98,35)" fg:x="459" fg:w="3"/><text x="2.5075%" y="335.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (3 samples, 0.01%)</title><rect x="2.2575%" y="309" width="0.0148%" height="15" fill="rgb(247,138,52)" fg:x="459" fg:w="3"/><text x="2.5075%" y="319.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (3 samples, 0.01%)</title><rect x="2.2575%" y="293" width="0.0148%" height="15" fill="rgb(213,79,30)" fg:x="459" fg:w="3"/><text x="2.5075%" y="303.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (3 samples, 0.01%)</title><rect x="2.2575%" y="277" width="0.0148%" height="15" fill="rgb(246,177,23)" fg:x="459" fg:w="3"/><text x="2.5075%" y="287.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::app_delegate::did_finish_launching (3 samples, 0.01%)</title><rect x="2.2575%" y="261" width="0.0148%" height="15" fill="rgb(230,62,27)" fg:x="459" fg:w="3"/><text x="2.5075%" y="271.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::app_state::AppState::launched (3 samples, 0.01%)</title><rect x="2.2575%" y="245" width="0.0148%" height="15" fill="rgb(216,154,8)" fg:x="459" fg:w="3"/><text x="2.5075%" y="255.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (6 samples, 0.03%)</title><rect x="2.3067%" y="357" width="0.0295%" height="15" fill="rgb(244,35,45)" fg:x="469" fg:w="6"/><text x="2.5567%" y="367.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (6 samples, 0.03%)</title><rect x="2.3067%" y="341" width="0.0295%" height="15" fill="rgb(251,115,12)" fg:x="469" fg:w="6"/><text x="2.5567%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (6 samples, 0.03%)</title><rect x="2.3067%" y="325" width="0.0295%" height="15" fill="rgb(240,54,50)" fg:x="469" fg:w="6"/><text x="2.5567%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (6 samples, 0.03%)</title><rect x="2.3067%" y="309" width="0.0295%" height="15" fill="rgb(233,84,52)" fg:x="469" fg:w="6"/><text x="2.5567%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.03%)</title><rect x="2.3067%" y="293" width="0.0295%" height="15" fill="rgb(207,117,47)" fg:x="469" fg:w="6"/><text x="2.5567%" y="303.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (11 samples, 0.05%)</title><rect x="2.2870%" y="373" width="0.0541%" height="15" fill="rgb(249,43,39)" fg:x="465" fg:w="11"/><text x="2.5370%" y="383.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (13 samples, 0.06%)</title><rect x="2.2821%" y="389" width="0.0639%" height="15" fill="rgb(209,38,44)" fg:x="464" fg:w="13"/><text x="2.5321%" y="399.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (14 samples, 0.07%)</title><rect x="2.2821%" y="437" width="0.0689%" height="15" fill="rgb(236,212,23)" fg:x="464" fg:w="14"/><text x="2.5321%" y="447.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (14 samples, 0.07%)</title><rect x="2.2821%" y="421" width="0.0689%" height="15" fill="rgb(242,79,21)" fg:x="464" fg:w="14"/><text x="2.5321%" y="431.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (14 samples, 0.07%)</title><rect x="2.2821%" y="405" width="0.0689%" height="15" fill="rgb(211,96,35)" fg:x="464" fg:w="14"/><text x="2.5321%" y="415.50"></text></g><g><title>AppKit`__68-[_NSEnterFullScreenTransitionController _startFullScreenTransition]_block_invoke (3 samples, 0.01%)</title><rect x="2.3608%" y="341" width="0.0148%" height="15" fill="rgb(253,215,40)" fg:x="480" fg:w="3"/><text x="2.6108%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (6 samples, 0.03%)</title><rect x="2.3608%" y="357" width="0.0295%" height="15" fill="rgb(211,81,21)" fg:x="480" fg:w="6"/><text x="2.6108%" y="367.50"></text></g><g><title>SkyLight`invocation function for block in CGSDatagramReadStream::mainQueueWakeup (3 samples, 0.01%)</title><rect x="2.3756%" y="341" width="0.0148%" height="15" fill="rgb(208,190,38)" fg:x="483" fg:w="3"/><text x="2.6256%" y="351.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::dispatchMainQueueDatagrams (3 samples, 0.01%)</title><rect x="2.3756%" y="325" width="0.0148%" height="15" fill="rgb(235,213,38)" fg:x="483" fg:w="3"/><text x="2.6256%" y="335.50"></text></g><g><title>SkyLight`(anonymous namespace)::notify_datagram_handler (3 samples, 0.01%)</title><rect x="2.3756%" y="309" width="0.0148%" height="15" fill="rgb(237,122,38)" fg:x="483" fg:w="3"/><text x="2.6256%" y="319.50"></text></g><g><title>AppKit`-[NSWindow(NSWindow_Theme) _performHoldingResizeSnapshots:completionHandler:] (3 samples, 0.01%)</title><rect x="2.3903%" y="309" width="0.0148%" height="15" fill="rgb(244,218,35)" fg:x="486" fg:w="3"/><text x="2.6403%" y="319.50"></text></g><g><title>AppKit`__47-[_NSEnterFullScreenTransitionController start]_block_invoke (3 samples, 0.01%)</title><rect x="2.3903%" y="293" width="0.0148%" height="15" fill="rgb(240,68,47)" fg:x="486" fg:w="3"/><text x="2.6403%" y="303.50"></text></g><g><title>AppKit`-[_NSEnterFullScreenTransitionController setupWindowForAfterFullScreenEnter] (3 samples, 0.01%)</title><rect x="2.3903%" y="277" width="0.0148%" height="15" fill="rgb(210,16,53)" fg:x="486" fg:w="3"/><text x="2.6403%" y="287.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (3 samples, 0.01%)</title><rect x="2.3903%" y="261" width="0.0148%" height="15" fill="rgb(235,124,12)" fg:x="486" fg:w="3"/><text x="2.6403%" y="271.50"></text></g><g><title>AppKit`__76-[_NSEnterFullScreenTransitionController setupWindowForAfterFullScreenEnter]_block_invoke (3 samples, 0.01%)</title><rect x="2.3903%" y="245" width="0.0148%" height="15" fill="rgb(224,169,11)" fg:x="486" fg:w="3"/><text x="2.6403%" y="255.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (10 samples, 0.05%)</title><rect x="2.3608%" y="373" width="0.0492%" height="15" fill="rgb(250,166,2)" fg:x="480" fg:w="10"/><text x="2.6108%" y="383.50"></text></g><g><title>tiny_voxel`dispatch::context_and_function::work_execute_closure (4 samples, 0.02%)</title><rect x="2.3903%" y="357" width="0.0197%" height="15" fill="rgb(242,216,29)" fg:x="486" fg:w="4"/><text x="2.6403%" y="367.50"></text></g><g><title>AppKit`-[_NSFullScreenSpace(Transitions) startTransition:] (4 samples, 0.02%)</title><rect x="2.3903%" y="341" width="0.0197%" height="15" fill="rgb(230,116,27)" fg:x="486" fg:w="4"/><text x="2.6403%" y="351.50"></text></g><g><title>AppKit`-[_NSEnterFullScreenTransitionController start] (4 samples, 0.02%)</title><rect x="2.3903%" y="325" width="0.0197%" height="15" fill="rgb(228,99,48)" fg:x="486" fg:w="4"/><text x="2.6403%" y="335.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_async_reply_invoke (3 samples, 0.01%)</title><rect x="2.4100%" y="373" width="0.0148%" height="15" fill="rgb(253,11,6)" fg:x="490" fg:w="3"/><text x="2.6600%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout3 (3 samples, 0.01%)</title><rect x="2.4100%" y="357" width="0.0148%" height="15" fill="rgb(247,143,39)" fg:x="490" fg:w="3"/><text x="2.6600%" y="367.50"></text></g><g><title>libxpc.dylib`_xpc_connection_call_reply_async (3 samples, 0.01%)</title><rect x="2.4100%" y="341" width="0.0148%" height="15" fill="rgb(236,97,10)" fg:x="490" fg:w="3"/><text x="2.6600%" y="351.50"></text></g><g><title>libxpc.dylib`_xpc_connection_reply_callout (3 samples, 0.01%)</title><rect x="2.4100%" y="325" width="0.0148%" height="15" fill="rgb(233,208,19)" fg:x="490" fg:w="3"/><text x="2.6600%" y="335.50"></text></g><g><title>AppKit`__NSFullScreenDockConnectionSendEnterForSpace_block_invoke (3 samples, 0.01%)</title><rect x="2.4100%" y="309" width="0.0148%" height="15" fill="rgb(216,164,2)" fg:x="490" fg:w="3"/><text x="2.6600%" y="319.50"></text></g><g><title>AppKit`__65-[_NSEnterFullScreenTransitionController _performEnterFullScreen]_block_invoke (3 samples, 0.01%)</title><rect x="2.4100%" y="293" width="0.0148%" height="15" fill="rgb(220,129,5)" fg:x="490" fg:w="3"/><text x="2.6600%" y="303.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (16 samples, 0.08%)</title><rect x="2.3608%" y="421" width="0.0787%" height="15" fill="rgb(242,17,10)" fg:x="480" fg:w="16"/><text x="2.6108%" y="431.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (16 samples, 0.08%)</title><rect x="2.3608%" y="405" width="0.0787%" height="15" fill="rgb(242,107,0)" fg:x="480" fg:w="16"/><text x="2.6108%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (16 samples, 0.08%)</title><rect x="2.3608%" y="389" width="0.0787%" height="15" fill="rgb(251,28,31)" fg:x="480" fg:w="16"/><text x="2.6108%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (3 samples, 0.01%)</title><rect x="2.4247%" y="373" width="0.0148%" height="15" fill="rgb(233,223,10)" fg:x="493" fg:w="3"/><text x="2.6747%" y="383.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (3 samples, 0.01%)</title><rect x="2.4247%" y="357" width="0.0148%" height="15" fill="rgb(215,21,27)" fg:x="493" fg:w="3"/><text x="2.6747%" y="367.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (3 samples, 0.01%)</title><rect x="2.4247%" y="341" width="0.0148%" height="15" fill="rgb(232,23,21)" fg:x="493" fg:w="3"/><text x="2.6747%" y="351.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.01%)</title><rect x="2.4247%" y="325" width="0.0148%" height="15" fill="rgb(244,5,23)" fg:x="493" fg:w="3"/><text x="2.6747%" y="335.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (6 samples, 0.03%)</title><rect x="2.4395%" y="421" width="0.0295%" height="15" fill="rgb(226,81,46)" fg:x="496" fg:w="6"/><text x="2.6895%" y="431.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (6 samples, 0.03%)</title><rect x="2.4395%" y="405" width="0.0295%" height="15" fill="rgb(247,70,30)" fg:x="496" fg:w="6"/><text x="2.6895%" y="415.50"></text></g><g><title>ViewBridge`deferredBlockOpportunity_block_invoke_2 (3 samples, 0.01%)</title><rect x="2.4543%" y="389" width="0.0148%" height="15" fill="rgb(212,68,19)" fg:x="499" fg:w="3"/><text x="2.7043%" y="399.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (6 samples, 0.03%)</title><rect x="2.4739%" y="325" width="0.0295%" height="15" fill="rgb(240,187,13)" fg:x="503" fg:w="6"/><text x="2.7239%" y="335.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (7 samples, 0.03%)</title><rect x="2.4739%" y="341" width="0.0344%" height="15" fill="rgb(223,113,26)" fg:x="503" fg:w="7"/><text x="2.7239%" y="351.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (9 samples, 0.04%)</title><rect x="2.4739%" y="357" width="0.0443%" height="15" fill="rgb(206,192,2)" fg:x="503" fg:w="9"/><text x="2.7239%" y="367.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (10 samples, 0.05%)</title><rect x="2.4739%" y="373" width="0.0492%" height="15" fill="rgb(241,108,4)" fg:x="503" fg:w="10"/><text x="2.7239%" y="383.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (6 samples, 0.03%)</title><rect x="2.5280%" y="325" width="0.0295%" height="15" fill="rgb(247,173,49)" fg:x="514" fg:w="6"/><text x="2.7780%" y="335.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (4 samples, 0.02%)</title><rect x="2.5379%" y="309" width="0.0197%" height="15" fill="rgb(224,114,35)" fg:x="516" fg:w="4"/><text x="2.7879%" y="319.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.02%)</title><rect x="2.5379%" y="293" width="0.0197%" height="15" fill="rgb(245,159,27)" fg:x="516" fg:w="4"/><text x="2.7879%" y="303.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (3 samples, 0.01%)</title><rect x="2.5428%" y="277" width="0.0148%" height="15" fill="rgb(245,172,44)" fg:x="517" fg:w="3"/><text x="2.7928%" y="287.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (3 samples, 0.01%)</title><rect x="2.5428%" y="261" width="0.0148%" height="15" fill="rgb(236,23,11)" fg:x="517" fg:w="3"/><text x="2.7928%" y="271.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (3 samples, 0.01%)</title><rect x="2.5428%" y="245" width="0.0148%" height="15" fill="rgb(205,117,38)" fg:x="517" fg:w="3"/><text x="2.7928%" y="255.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (10 samples, 0.05%)</title><rect x="2.5280%" y="341" width="0.0492%" height="15" fill="rgb(237,72,25)" fg:x="514" fg:w="10"/><text x="2.7780%" y="351.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (5 samples, 0.02%)</title><rect x="2.5772%" y="341" width="0.0246%" height="15" fill="rgb(244,70,9)" fg:x="524" fg:w="5"/><text x="2.8272%" y="351.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (5 samples, 0.02%)</title><rect x="2.5772%" y="325" width="0.0246%" height="15" fill="rgb(217,125,39)" fg:x="524" fg:w="5"/><text x="2.8272%" y="335.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (5 samples, 0.02%)</title><rect x="2.5772%" y="309" width="0.0246%" height="15" fill="rgb(235,36,10)" fg:x="524" fg:w="5"/><text x="2.8272%" y="319.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (3 samples, 0.01%)</title><rect x="2.5871%" y="293" width="0.0148%" height="15" fill="rgb(251,123,47)" fg:x="526" fg:w="3"/><text x="2.8371%" y="303.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (27 samples, 0.13%)</title><rect x="2.4739%" y="389" width="0.1328%" height="15" fill="rgb(221,13,13)" fg:x="503" fg:w="27"/><text x="2.7239%" y="399.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (17 samples, 0.08%)</title><rect x="2.5231%" y="373" width="0.0836%" height="15" fill="rgb(238,131,9)" fg:x="513" fg:w="17"/><text x="2.7731%" y="383.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (16 samples, 0.08%)</title><rect x="2.5280%" y="357" width="0.0787%" height="15" fill="rgb(211,50,8)" fg:x="514" fg:w="16"/><text x="2.7780%" y="367.50"></text></g><g><title>tiny_voxel`core::hash::BuildHasher::hash_one (7 samples, 0.03%)</title><rect x="2.6461%" y="293" width="0.0344%" height="15" fill="rgb(245,182,24)" fg:x="538" fg:w="7"/><text x="2.8961%" y="303.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (5 samples, 0.02%)</title><rect x="3.1379%" y="261" width="0.0246%" height="15" fill="rgb(242,14,37)" fg:x="638" fg:w="5"/><text x="3.3879%" y="271.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext setVertexBuffer:offset:atIndex:] (6 samples, 0.03%)</title><rect x="3.1625%" y="261" width="0.0295%" height="15" fill="rgb(246,228,12)" fg:x="643" fg:w="6"/><text x="3.4125%" y="271.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setVertexProgramBuffer (6 samples, 0.03%)</title><rect x="3.1920%" y="261" width="0.0295%" height="15" fill="rgb(213,55,15)" fg:x="649" fg:w="6"/><text x="3.4420%" y="271.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (180 samples, 0.89%)</title><rect x="3.2215%" y="261" width="0.8853%" height="15" fill="rgb(209,9,3)" fg:x="655" fg:w="180"/><text x="3.4715%" y="271.50"></text></g><g><title>tiny_voxel`DYLD-STUB$$objc_msgSend (3 samples, 0.01%)</title><rect x="4.1068%" y="261" width="0.0148%" height="15" fill="rgb(230,59,30)" fg:x="835" fg:w="3"/><text x="4.3568%" y="271.50"></text></g><g><title>tiny_voxel`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (8 samples, 0.04%)</title><rect x="4.1216%" y="261" width="0.0393%" height="15" fill="rgb(209,121,21)" fg:x="838" fg:w="8"/><text x="4.3716%" y="271.50"></text></g><g><title>tiny_voxel`metal::encoder::RenderCommandEncoderRef::set_vertex_buffer (4 samples, 0.02%)</title><rect x="4.1609%" y="261" width="0.0197%" height="15" fill="rgb(220,109,13)" fg:x="846" fg:w="4"/><text x="4.4109%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::VertexState::update_limits (35 samples, 0.17%)</title><rect x="4.1904%" y="261" width="0.1721%" height="15" fill="rgb(232,18,1)" fg:x="852" fg:w="35"/><text x="4.4404%" y="271.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindVertexBufferResource (24 samples, 0.12%)</title><rect x="6.0397%" y="229" width="0.1180%" height="15" fill="rgb(215,41,42)" fg:x="1228" fg:w="24"/><text x="6.2897%" y="239.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (5 samples, 0.02%)</title><rect x="6.4726%" y="165" width="0.0246%" height="15" fill="rgb(224,123,36)" fg:x="1316" fg:w="5"/><text x="6.7226%" y="175.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (5 samples, 0.02%)</title><rect x="6.4726%" y="149" width="0.0246%" height="15" fill="rgb(240,125,3)" fg:x="1316" fg:w="5"/><text x="6.7226%" y="159.50"></text></g><g><title>IOKit`IOConnectCallMethod (5 samples, 0.02%)</title><rect x="6.4726%" y="133" width="0.0246%" height="15" fill="rgb(205,98,50)" fg:x="1316" fg:w="5"/><text x="6.7226%" y="143.50"></text></g><g><title>IOKit`io_connect_method (5 samples, 0.02%)</title><rect x="6.4726%" y="117" width="0.0246%" height="15" fill="rgb(205,185,37)" fg:x="1316" fg:w="5"/><text x="6.7226%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="6.4726%" y="101" width="0.0246%" height="15" fill="rgb(238,207,15)" fg:x="1316" fg:w="5"/><text x="6.7226%" y="111.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (6 samples, 0.03%)</title><rect x="6.4726%" y="181" width="0.0295%" height="15" fill="rgb(213,199,42)" fg:x="1316" fg:w="6"/><text x="6.7226%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`AGX::DataBufferAllocator&lt;34ul&gt;::grow (7 samples, 0.03%)</title><rect x="6.4726%" y="213" width="0.0344%" height="15" fill="rgb(235,201,11)" fg:x="1316" fg:w="7"/><text x="6.7226%" y="223.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (7 samples, 0.03%)</title><rect x="6.4726%" y="197" width="0.0344%" height="15" fill="rgb(207,46,11)" fg:x="1316" fg:w="7"/><text x="6.7226%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindResource (5 samples, 0.02%)</title><rect x="6.9890%" y="197" width="0.0246%" height="15" fill="rgb(241,35,35)" fg:x="1421" fg:w="5"/><text x="7.2390%" y="207.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (25 samples, 0.12%)</title><rect x="7.0972%" y="181" width="0.1230%" height="15" fill="rgb(243,32,47)" fg:x="1443" fg:w="25"/><text x="7.3472%" y="191.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (51 samples, 0.25%)</title><rect x="7.0136%" y="197" width="0.2508%" height="15" fill="rgb(247,202,23)" fg:x="1426" fg:w="51"/><text x="7.2636%" y="207.50"></text></g><g><title>IOGPU`ioGPUResourceListRebuild (9 samples, 0.04%)</title><rect x="7.2201%" y="181" width="0.0443%" height="15" fill="rgb(219,102,11)" fg:x="1468" fg:w="9"/><text x="7.4701%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindVertexBufferResource (172 samples, 0.85%)</title><rect x="6.5070%" y="213" width="0.8460%" height="15" fill="rgb(243,110,44)" fg:x="1323" fg:w="172"/><text x="6.7570%" y="223.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (18 samples, 0.09%)</title><rect x="7.2644%" y="197" width="0.0885%" height="15" fill="rgb(222,74,54)" fg:x="1477" fg:w="18"/><text x="7.5144%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G15::DataBufferAllocator&amp;, AGX::G15::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G15::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (44 samples, 0.22%)</title><rect x="7.3529%" y="213" width="0.2164%" height="15" fill="rgb(216,99,12)" fg:x="1495" fg:w="44"/><text x="7.6029%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G15::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt; const&amp;, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt; const&amp;, AGX::RenderDirtyBits (27 samples, 0.13%)</title><rect x="7.5693%" y="213" width="0.1328%" height="15" fill="rgb(226,22,26)" fg:x="1539" fg:w="27"/><text x="7.8193%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindResource (61 samples, 0.30%)</title><rect x="7.7021%" y="213" width="0.3000%" height="15" fill="rgb(217,163,10)" fg:x="1566" fg:w="61"/><text x="7.9521%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`DYLD-STUB$$IOGPUResourceListAddResource (3 samples, 0.01%)</title><rect x="8.0022%" y="213" width="0.0148%" height="15" fill="rgb(213,25,53)" fg:x="1627" fg:w="3"/><text x="8.2522%" y="223.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (53 samples, 0.26%)</title><rect x="8.0218%" y="213" width="0.2607%" height="15" fill="rgb(252,105,26)" fg:x="1631" fg:w="53"/><text x="8.2718%" y="223.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (13 samples, 0.06%)</title><rect x="8.2825%" y="213" width="0.0639%" height="15" fill="rgb(220,39,43)" fg:x="1684" fg:w="13"/><text x="8.5325%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits (456 samples, 2.24%)</title><rect x="6.1578%" y="229" width="2.2428%" height="15" fill="rgb(229,68,48)" fg:x="1252" fg:w="456"/><text x="6.4078%" y="239.50">A..</text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.05%)</title><rect x="8.3464%" y="213" width="0.0541%" height="15" fill="rgb(252,8,32)" fg:x="1697" fg:w="11"/><text x="8.5964%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeISPPrimitiveType (7 samples, 0.03%)</title><rect x="8.4006%" y="229" width="0.0344%" height="15" fill="rgb(223,20,43)" fg:x="1708" fg:w="7"/><text x="8.6506%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderUSCStateLoader&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G15::DataBufferAllocator&amp;, AGX::G15::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G15::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (13 samples, 0.06%)</title><rect x="8.4350%" y="229" width="0.0639%" height="15" fill="rgb(229,81,49)" fg:x="1715" fg:w="13"/><text x="8.6850%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setAndBindResource (8 samples, 0.04%)</title><rect x="8.5038%" y="229" width="0.0393%" height="15" fill="rgb(236,28,36)" fg:x="1729" fg:w="8"/><text x="8.7538%" y="239.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (3 samples, 0.01%)</title><rect x="8.5825%" y="213" width="0.0148%" height="15" fill="rgb(249,185,26)" fg:x="1745" fg:w="3"/><text x="8.8325%" y="223.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (12 samples, 0.06%)</title><rect x="8.5432%" y="229" width="0.0590%" height="15" fill="rgb(249,174,33)" fg:x="1737" fg:w="12"/><text x="8.7932%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (553 samples, 2.72%)</title><rect x="5.9610%" y="245" width="2.7199%" height="15" fill="rgb(233,201,37)" fg:x="1212" fg:w="553"/><text x="6.2110%" y="255.50">AG..</text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (16 samples, 0.08%)</title><rect x="8.6022%" y="229" width="0.0787%" height="15" fill="rgb(221,78,26)" fg:x="1749" fg:w="16"/><text x="8.8522%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setVertexProgramBuffer (26 samples, 0.13%)</title><rect x="8.6907%" y="245" width="0.1279%" height="15" fill="rgb(250,127,30)" fg:x="1767" fg:w="26"/><text x="8.9407%" y="255.50"></text></g><g><title>AGXMetalG15G_C0`AGX::ResourceGroupUsage&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::setResource (19 samples, 0.09%)</title><rect x="8.8235%" y="245" width="0.0934%" height="15" fill="rgb(230,49,44)" fg:x="1794" fg:w="19"/><text x="9.0735%" y="255.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (156 samples, 0.77%)</title><rect x="8.9219%" y="245" width="0.7673%" height="15" fill="rgb(229,67,23)" fg:x="1814" fg:w="156"/><text x="9.1719%" y="255.50"></text></g><g><title>IOGPU`_ioGPUResourceListAddResourceEntry (6 samples, 0.03%)</title><rect x="9.6892%" y="245" width="0.0295%" height="15" fill="rgb(249,83,47)" fg:x="1970" fg:w="6"/><text x="9.9392%" y="255.50"></text></g><g><title>tiny_voxel`&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (9 samples, 0.04%)</title><rect x="9.7187%" y="245" width="0.0443%" height="15" fill="rgb(215,43,3)" fg:x="1976" fg:w="9"/><text x="9.9687%" y="255.50"></text></g><g><title>tiny_voxel`&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (12 samples, 0.06%)</title><rect x="9.7629%" y="245" width="0.0590%" height="15" fill="rgb(238,154,13)" fg:x="1985" fg:w="12"/><text x="10.0129%" y="255.50"></text></g><g><title>tiny_voxel`core::ptr::drop_in_place&lt;wgpu_core::track::StatefulTrackerSubset&gt; (13 samples, 0.06%)</title><rect x="9.8220%" y="245" width="0.0639%" height="15" fill="rgb(219,56,2)" fg:x="1997" fg:w="13"/><text x="10.0720%" y="255.50"></text></g><g><title>tiny_voxel`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (3 samples, 0.01%)</title><rect x="9.8859%" y="245" width="0.0148%" height="15" fill="rgb(233,0,4)" fg:x="2010" fg:w="3"/><text x="10.1359%" y="255.50"></text></g><g><title>tiny_voxel`&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (5 samples, 0.02%)</title><rect x="9.9006%" y="229" width="0.0246%" height="15" fill="rgb(235,30,7)" fg:x="2013" fg:w="5"/><text x="10.1506%" y="239.50"></text></g><g><title>tiny_voxel`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (227 samples, 1.12%)</title><rect x="9.9006%" y="245" width="1.1165%" height="15" fill="rgb(250,79,13)" fg:x="2013" fg:w="227"/><text x="10.1506%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (222 samples, 1.09%)</title><rect x="9.9252%" y="229" width="1.0919%" height="15" fill="rgb(211,146,34)" fg:x="2018" fg:w="222"/><text x="10.1752%" y="239.50"></text></g><g><title>tiny_voxel`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (72 samples, 0.35%)</title><rect x="10.6630%" y="213" width="0.3541%" height="15" fill="rgb(228,22,38)" fg:x="2168" fg:w="72"/><text x="10.9130%" y="223.50"></text></g><g><title>tiny_voxel`wgpu_core::command::bind::compat::Manager&lt;T&gt;::invalid_mask (8 samples, 0.04%)</title><rect x="11.0171%" y="245" width="0.0393%" height="15" fill="rgb(235,168,5)" fg:x="2240" fg:w="8"/><text x="11.2671%" y="255.50"></text></g><g><title>AGXMetalG15G_C0`AGX::Framebuffer&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::Framebuffer (4 samples, 0.02%)</title><rect x="11.0761%" y="149" width="0.0197%" height="15" fill="rgb(221,155,16)" fg:x="2252" fg:w="4"/><text x="11.3261%" y="159.50"></text></g><g><title>AGXMetalG15G_C0`AGX::FramebufferGen3_3&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::FramebufferGen3_3 (5 samples, 0.02%)</title><rect x="11.0761%" y="165" width="0.0246%" height="15" fill="rgb(215,215,53)" fg:x="2252" fg:w="5"/><text x="11.3261%" y="175.50"></text></g><g><title>AGXMetalG15G_C0`AGX::ContextCommon&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::newCommand (4 samples, 0.02%)</title><rect x="11.1056%" y="149" width="0.0197%" height="15" fill="rgb(223,4,10)" fg:x="2258" fg:w="4"/><text x="11.3556%" y="159.50"></text></g><g><title>AGXMetalG15G_C0`AGX::DataBufferAllocator&lt;34ul&gt;::initializeDataBuffer (3 samples, 0.01%)</title><rect x="11.1106%" y="133" width="0.0148%" height="15" fill="rgb(234,103,6)" fg:x="2259" fg:w="3"/><text x="11.3606%" y="143.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (3 samples, 0.01%)</title><rect x="11.1106%" y="117" width="0.0148%" height="15" fill="rgb(227,97,0)" fg:x="2259" fg:w="3"/><text x="11.3606%" y="127.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (3 samples, 0.01%)</title><rect x="11.1106%" y="101" width="0.0148%" height="15" fill="rgb(234,150,53)" fg:x="2259" fg:w="3"/><text x="11.3606%" y="111.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (14 samples, 0.07%)</title><rect x="11.0663%" y="181" width="0.0689%" height="15" fill="rgb(228,201,54)" fg:x="2250" fg:w="14"/><text x="11.3163%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass (7 samples, 0.03%)</title><rect x="11.1007%" y="165" width="0.0344%" height="15" fill="rgb(222,22,37)" fg:x="2257" fg:w="7"/><text x="11.3507%" y="175.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (16 samples, 0.08%)</title><rect x="11.0663%" y="197" width="0.0787%" height="15" fill="rgb(237,53,32)" fg:x="2250" fg:w="16"/><text x="11.3163%" y="207.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (17 samples, 0.08%)</title><rect x="11.0663%" y="245" width="0.0836%" height="15" fill="rgb(233,25,53)" fg:x="2250" fg:w="17"/><text x="11.3163%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (17 samples, 0.08%)</title><rect x="11.0663%" y="229" width="0.0836%" height="15" fill="rgb(210,40,34)" fg:x="2250" fg:w="17"/><text x="11.3163%" y="239.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (17 samples, 0.08%)</title><rect x="11.0663%" y="213" width="0.0836%" height="15" fill="rgb(241,220,44)" fg:x="2250" fg:w="17"/><text x="11.3163%" y="223.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::State::is_ready (31 samples, 0.15%)</title><rect x="11.1499%" y="245" width="0.1525%" height="15" fill="rgb(235,28,35)" fg:x="2267" fg:w="31"/><text x="11.3999%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::hub::Storage&lt;T,I&gt;::get (11 samples, 0.05%)</title><rect x="11.3024%" y="245" width="0.0541%" height="15" fill="rgb(210,56,17)" fg:x="2298" fg:w="11"/><text x="11.5524%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.03%)</title><rect x="11.6614%" y="229" width="0.0295%" height="15" fill="rgb(224,130,29)" fg:x="2371" fg:w="6"/><text x="11.9114%" y="239.50"></text></g><g><title>tiny_voxel`wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (162 samples, 0.80%)</title><rect x="11.3565%" y="245" width="0.7968%" height="15" fill="rgb(235,212,8)" fg:x="2309" fg:w="162"/><text x="11.6065%" y="255.50"></text></g><g><title>tiny_voxel`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (94 samples, 0.46%)</title><rect x="11.6909%" y="229" width="0.4623%" height="15" fill="rgb(223,33,50)" fg:x="2377" fg:w="94"/><text x="11.9409%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (3 samples, 0.01%)</title><rect x="12.1385%" y="213" width="0.0148%" height="15" fill="rgb(219,149,13)" fg:x="2468" fg:w="3"/><text x="12.3885%" y="223.50"></text></g><g><title>tiny_voxel`wgpu_core::track::buffer::_&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;::change (125 samples, 0.61%)</title><rect x="12.1582%" y="245" width="0.6148%" height="15" fill="rgb(250,156,29)" fg:x="2472" fg:w="125"/><text x="12.4082%" y="255.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (4 samples, 0.02%)</title><rect x="12.7730%" y="197" width="0.0197%" height="15" fill="rgb(216,193,19)" fg:x="2597" fg:w="4"/><text x="13.0230%" y="207.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (4 samples, 0.02%)</title><rect x="12.7730%" y="181" width="0.0197%" height="15" fill="rgb(216,135,14)" fg:x="2597" fg:w="4"/><text x="13.0230%" y="191.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (4 samples, 0.02%)</title><rect x="12.7730%" y="165" width="0.0197%" height="15" fill="rgb(241,47,5)" fg:x="2597" fg:w="4"/><text x="13.0230%" y="175.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (5 samples, 0.02%)</title><rect x="12.7730%" y="245" width="0.0246%" height="15" fill="rgb(233,42,35)" fg:x="2597" fg:w="5"/><text x="13.0230%" y="255.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (5 samples, 0.02%)</title><rect x="12.7730%" y="229" width="0.0246%" height="15" fill="rgb(231,13,6)" fg:x="2597" fg:w="5"/><text x="13.0230%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (5 samples, 0.02%)</title><rect x="12.7730%" y="213" width="0.0246%" height="15" fill="rgb(207,181,40)" fg:x="2597" fg:w="5"/><text x="13.0230%" y="223.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::draw_indexed (11 samples, 0.05%)</title><rect x="12.7976%" y="245" width="0.0541%" height="15" fill="rgb(254,173,49)" fg:x="2602" fg:w="11"/><text x="13.0476%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1,728 samples, 8.50%)</title><rect x="4.3626%" y="261" width="8.4989%" height="15" fill="rgb(221,1,38)" fg:x="887" fg:w="1728"/><text x="4.6126%" y="271.50">tiny_voxel`w..</text></g><g><title>tiny_voxel`wgpu_core::hub::Storage&lt;T,I&gt;::get (5 samples, 0.02%)</title><rect x="12.8615%" y="261" width="0.0246%" height="15" fill="rgb(206,124,46)" fg:x="2615" fg:w="5"/><text x="13.1115%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::init_tracker::buffer::_&lt;impl wgpu_core::init_tracker::InitTracker&lt;u64&gt;&gt;::create_action (23 samples, 0.11%)</title><rect x="12.8910%" y="261" width="0.1131%" height="15" fill="rgb(249,21,11)" fg:x="2621" fg:w="23"/><text x="13.1410%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (10 samples, 0.05%)</title><rect x="13.0041%" y="261" width="0.0492%" height="15" fill="rgb(222,201,40)" fg:x="2644" fg:w="10"/><text x="13.2541%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::track::buffer::_&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;::change (90 samples, 0.44%)</title><rect x="13.0533%" y="261" width="0.4427%" height="15" fill="rgb(235,61,29)" fg:x="2654" fg:w="90"/><text x="13.3033%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::validation::check_buffer_usage (5 samples, 0.02%)</title><rect x="13.4960%" y="261" width="0.0246%" height="15" fill="rgb(219,207,3)" fg:x="2744" fg:w="5"/><text x="13.7460%" y="271.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (2,114 samples, 10.40%)</title><rect x="3.1379%" y="277" width="10.3974%" height="15" fill="rgb(222,56,46)" fg:x="638" fg:w="2114"/><text x="3.3879%" y="287.50">tiny_voxel`&lt;wgp..</text></g><g><title>tiny_voxel`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::set_index_buffer (3 samples, 0.01%)</title><rect x="13.5206%" y="261" width="0.0148%" height="15" fill="rgb(239,76,54)" fg:x="2749" fg:w="3"/><text x="13.7706%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.01%)</title><rect x="13.5353%" y="261" width="0.0148%" height="15" fill="rgb(231,124,27)" fg:x="2752" fg:w="3"/><text x="13.7853%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::LifeGuard::use_at (11 samples, 0.05%)</title><rect x="13.5501%" y="261" width="0.0541%" height="15" fill="rgb(249,195,6)" fg:x="2755" fg:w="11"/><text x="13.8001%" y="271.50"></text></g><g><title>tiny_voxel`&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (9 samples, 0.04%)</title><rect x="13.7370%" y="245" width="0.0443%" height="15" fill="rgb(237,174,47)" fg:x="2793" fg:w="9"/><text x="13.9870%" y="255.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyBlitContext deferredEndEncoding] (4 samples, 0.02%)</title><rect x="13.7812%" y="181" width="0.0197%" height="15" fill="rgb(206,201,31)" fg:x="2802" fg:w="4"/><text x="14.0312%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::commit (4 samples, 0.02%)</title><rect x="13.7812%" y="165" width="0.0197%" height="15" fill="rgb(231,57,52)" fg:x="2802" fg:w="4"/><text x="14.0312%" y="175.50"></text></g><g><title>AGXMetalG15G_C0`AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::endPreviousBlitCommand (4 samples, 0.02%)</title><rect x="13.7812%" y="149" width="0.0197%" height="15" fill="rgb(248,177,22)" fg:x="2802" fg:w="4"/><text x="14.0312%" y="159.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandBuffer commitEncoder] (10 samples, 0.05%)</title><rect x="13.7812%" y="197" width="0.0492%" height="15" fill="rgb(215,211,37)" fg:x="2802" fg:w="10"/><text x="14.0312%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext deferredEndEncoding:] (5 samples, 0.02%)</title><rect x="13.8058%" y="181" width="0.0246%" height="15" fill="rgb(241,128,51)" fg:x="2807" fg:w="5"/><text x="14.0558%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::endRenderPassCommon (4 samples, 0.02%)</title><rect x="13.8107%" y="165" width="0.0197%" height="15" fill="rgb(227,165,31)" fg:x="2808" fg:w="4"/><text x="14.0607%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (3 samples, 0.01%)</title><rect x="13.8353%" y="133" width="0.0148%" height="15" fill="rgb(228,167,24)" fg:x="2813" fg:w="3"/><text x="14.0853%" y="143.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (4 samples, 0.02%)</title><rect x="13.8353%" y="181" width="0.0197%" height="15" fill="rgb(228,143,12)" fg:x="2813" fg:w="4"/><text x="14.0853%" y="191.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (4 samples, 0.02%)</title><rect x="13.8353%" y="165" width="0.0197%" height="15" fill="rgb(249,149,8)" fg:x="2813" fg:w="4"/><text x="14.0853%" y="175.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (4 samples, 0.02%)</title><rect x="13.8353%" y="149" width="0.0197%" height="15" fill="rgb(243,35,44)" fg:x="2813" fg:w="4"/><text x="14.0853%" y="159.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (3 samples, 0.01%)</title><rect x="13.8550%" y="181" width="0.0148%" height="15" fill="rgb(246,89,9)" fg:x="2817" fg:w="3"/><text x="14.1050%" y="191.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (3 samples, 0.01%)</title><rect x="13.8550%" y="165" width="0.0148%" height="15" fill="rgb(233,213,13)" fg:x="2817" fg:w="3"/><text x="14.1050%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (3 samples, 0.01%)</title><rect x="13.8550%" y="149" width="0.0148%" height="15" fill="rgb(233,141,41)" fg:x="2817" fg:w="3"/><text x="14.1050%" y="159.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandBuffer commit] (20 samples, 0.10%)</title><rect x="13.7812%" y="213" width="0.0984%" height="15" fill="rgb(239,167,4)" fg:x="2802" fg:w="20"/><text x="14.0312%" y="223.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (10 samples, 0.05%)</title><rect x="13.8304%" y="197" width="0.0492%" height="15" fill="rgb(209,217,16)" fg:x="2812" fg:w="10"/><text x="14.0804%" y="207.50"></text></g><g><title>tiny_voxel`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&lt;wgpu_hal::metal::Api&gt;&gt;::submit (21 samples, 0.10%)</title><rect x="13.7812%" y="245" width="0.1033%" height="15" fill="rgb(219,88,35)" fg:x="2802" fg:w="21"/><text x="14.0312%" y="255.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (21 samples, 0.10%)</title><rect x="13.7812%" y="229" width="0.1033%" height="15" fill="rgb(220,193,23)" fg:x="2802" fg:w="21"/><text x="14.0312%" y="239.50"></text></g><g><title>tiny_voxel`core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (11 samples, 0.05%)</title><rect x="13.8845%" y="245" width="0.0541%" height="15" fill="rgb(230,90,52)" fg:x="2823" fg:w="11"/><text x="14.1345%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::command::CommandBuffer&lt;A&gt;::insert_barriers (56 samples, 0.28%)</title><rect x="13.9386%" y="245" width="0.2754%" height="15" fill="rgb(252,106,19)" fg:x="2834" fg:w="56"/><text x="14.1886%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::track::buffer::_&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;::merge (13 samples, 0.06%)</title><rect x="14.1501%" y="229" width="0.0639%" height="15" fill="rgb(206,74,20)" fg:x="2877" fg:w="13"/><text x="14.4001%" y="239.50"></text></g><g><title>tiny_voxel`wgpu_core::device::life::LifetimeTracker&lt;A&gt;::triage_submissions (3 samples, 0.01%)</title><rect x="14.2140%" y="229" width="0.0148%" height="15" fill="rgb(230,138,44)" fg:x="2890" fg:w="3"/><text x="14.4640%" y="239.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (4 samples, 0.02%)</title><rect x="14.2386%" y="149" width="0.0197%" height="15" fill="rgb(235,182,43)" fg:x="2895" fg:w="4"/><text x="14.4886%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (6 samples, 0.03%)</title><rect x="14.2386%" y="165" width="0.0295%" height="15" fill="rgb(242,16,51)" fg:x="2895" fg:w="6"/><text x="14.4886%" y="175.50"></text></g><g><title>CoreFoundation`CFRelease (3 samples, 0.01%)</title><rect x="14.2731%" y="149" width="0.0148%" height="15" fill="rgb(248,9,4)" fg:x="2902" fg:w="3"/><text x="14.5231%" y="159.50"></text></g><g><title>IOKit`iokit_user_client_trap (83 samples, 0.41%)</title><rect x="14.3026%" y="133" width="0.4082%" height="15" fill="rgb(210,31,22)" fg:x="2908" fg:w="83"/><text x="14.5526%" y="143.50"></text></g><g><title>CoreFoundation`_CFRelease (87 samples, 0.43%)</title><rect x="14.2878%" y="149" width="0.4279%" height="15" fill="rgb(239,54,39)" fg:x="2905" fg:w="87"/><text x="14.5378%" y="159.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (3 samples, 0.01%)</title><rect x="14.7157%" y="117" width="0.0148%" height="15" fill="rgb(230,99,41)" fg:x="2992" fg:w="3"/><text x="14.9657%" y="127.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (3 samples, 0.01%)</title><rect x="14.7157%" y="101" width="0.0148%" height="15" fill="rgb(253,106,12)" fg:x="2992" fg:w="3"/><text x="14.9657%" y="111.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (4 samples, 0.02%)</title><rect x="14.7157%" y="133" width="0.0197%" height="15" fill="rgb(213,46,41)" fg:x="2992" fg:w="4"/><text x="14.9657%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.02%)</title><rect x="14.7354%" y="133" width="0.0197%" height="15" fill="rgb(215,133,35)" fg:x="2996" fg:w="4"/><text x="14.9854%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (4 samples, 0.02%)</title><rect x="14.7354%" y="117" width="0.0197%" height="15" fill="rgb(213,28,5)" fg:x="2996" fg:w="4"/><text x="14.9854%" y="127.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (9 samples, 0.04%)</title><rect x="14.7157%" y="149" width="0.0443%" height="15" fill="rgb(215,77,49)" fg:x="2992" fg:w="9"/><text x="14.9657%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (103 samples, 0.51%)</title><rect x="14.2681%" y="165" width="0.5066%" height="15" fill="rgb(248,100,22)" fg:x="2901" fg:w="103"/><text x="14.5181%" y="175.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (110 samples, 0.54%)</title><rect x="14.2386%" y="181" width="0.5410%" height="15" fill="rgb(208,67,9)" fg:x="2895" fg:w="110"/><text x="14.4886%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyBuffer dealloc] (112 samples, 0.55%)</title><rect x="14.2386%" y="213" width="0.5509%" height="15" fill="rgb(219,133,21)" fg:x="2895" fg:w="112"/><text x="14.4886%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer dealloc] (112 samples, 0.55%)</title><rect x="14.2386%" y="197" width="0.5509%" height="15" fill="rgb(246,46,29)" fg:x="2895" fg:w="112"/><text x="14.4886%" y="207.50"></text></g><g><title>tiny_voxel`wgpu_core::device::life::NonReferencedResources&lt;A&gt;::clean (115 samples, 0.57%)</title><rect x="14.2386%" y="229" width="0.5656%" height="15" fill="rgb(246,185,52)" fg:x="2895" fg:w="115"/><text x="14.4886%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyTexture dealloc] (3 samples, 0.01%)</title><rect x="14.7895%" y="213" width="0.0148%" height="15" fill="rgb(252,136,11)" fg:x="3007" fg:w="3"/><text x="15.0395%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXTexture dealloc] (3 samples, 0.01%)</title><rect x="14.7895%" y="197" width="0.0148%" height="15" fill="rgb(219,138,53)" fg:x="3007" fg:w="3"/><text x="15.0395%" y="207.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (3 samples, 0.01%)</title><rect x="14.7895%" y="181" width="0.0148%" height="15" fill="rgb(211,51,23)" fg:x="3007" fg:w="3"/><text x="15.0395%" y="191.50"></text></g><g><title>tiny_voxel`wgpu_core::device::Device&lt;A&gt;::maintain (121 samples, 0.60%)</title><rect x="14.2140%" y="245" width="0.5951%" height="15" fill="rgb(247,221,28)" fg:x="2890" fg:w="121"/><text x="14.4640%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (12 samples, 0.06%)</title><rect x="14.8190%" y="245" width="0.0590%" height="15" fill="rgb(251,222,45)" fg:x="3013" fg:w="12"/><text x="15.0690%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::track::TrackerSet::optimize (12 samples, 0.06%)</title><rect x="14.8780%" y="245" width="0.0590%" height="15" fill="rgb(217,162,53)" fg:x="3025" fg:w="12"/><text x="15.1280%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::track::buffer::_&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_hal::BufferUses&gt;&gt;::merge (7 samples, 0.03%)</title><rect x="14.9370%" y="245" width="0.0344%" height="15" fill="rgb(229,93,14)" fg:x="3037" fg:w="7"/><text x="15.1870%" y="255.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (5 samples, 0.02%)</title><rect x="14.9715%" y="181" width="0.0246%" height="15" fill="rgb(209,67,49)" fg:x="3044" fg:w="5"/><text x="15.2215%" y="191.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (3 samples, 0.01%)</title><rect x="14.9813%" y="165" width="0.0148%" height="15" fill="rgb(213,87,29)" fg:x="3046" fg:w="3"/><text x="15.2313%" y="175.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (7 samples, 0.03%)</title><rect x="14.9715%" y="197" width="0.0344%" height="15" fill="rgb(205,151,52)" fg:x="3044" fg:w="7"/><text x="15.2215%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (8 samples, 0.04%)</title><rect x="14.9715%" y="213" width="0.0393%" height="15" fill="rgb(253,215,39)" fg:x="3044" fg:w="8"/><text x="15.2215%" y="223.50"></text></g><g><title>tiny_voxel`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (287 samples, 1.41%)</title><rect x="13.6042%" y="261" width="1.4116%" height="15" fill="rgb(221,220,41)" fg:x="2766" fg:w="287"/><text x="13.8542%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (9 samples, 0.04%)</title><rect x="14.9715%" y="245" width="0.0443%" height="15" fill="rgb(218,133,21)" fg:x="3044" fg:w="9"/><text x="15.2215%" y="255.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (9 samples, 0.04%)</title><rect x="14.9715%" y="229" width="0.0443%" height="15" fill="rgb(221,193,43)" fg:x="3044" fg:w="9"/><text x="15.2215%" y="239.50"></text></g><g><title>tiny_voxel`wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (3 samples, 0.01%)</title><rect x="15.0157%" y="261" width="0.0148%" height="15" fill="rgb(240,128,52)" fg:x="3053" fg:w="3"/><text x="15.2657%" y="271.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (305 samples, 1.50%)</title><rect x="13.5353%" y="277" width="1.5001%" height="15" fill="rgb(253,114,12)" fg:x="2752" fg:w="305"/><text x="13.7853%" y="287.50"></text></g><g><title>tiny_voxel`alloc::fmt::format::format_inner (6 samples, 0.03%)</title><rect x="15.0354%" y="277" width="0.0295%" height="15" fill="rgb(215,223,47)" fg:x="3057" fg:w="6"/><text x="15.2854%" y="287.50"></text></g><g><title>tiny_voxel`core::fmt::write (6 samples, 0.03%)</title><rect x="15.0354%" y="261" width="0.0295%" height="15" fill="rgb(248,225,23)" fg:x="3057" fg:w="6"/><text x="15.2854%" y="271.50"></text></g><g><title>tiny_voxel`core::array::_&lt;impl core::fmt::Debug for [T (3 samples, 0.01%)</title><rect x="15.0502%" y="245" width="0.0148%" height="15" fill="rgb(250,108,0)" fg:x="3060" fg:w="3"/><text x="15.3002%" y="255.50"></text></g><g><title> N]&gt;::fmt (3 samples, 0.01%)</title><rect x="15.0502%" y="229" width="0.0148%" height="15" fill="rgb(228,208,7)" fg:x="3060" fg:w="3"/><text x="15.3002%" y="239.50"></text></g><g><title>tiny_voxel`glyph_brush_draw_cache::DrawCache::draw_and_upload (4 samples, 0.02%)</title><rect x="15.1092%" y="245" width="0.0197%" height="15" fill="rgb(244,45,10)" fg:x="3072" fg:w="4"/><text x="15.3592%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_text::cache::Cache::update_texture (4 samples, 0.02%)</title><rect x="15.1092%" y="229" width="0.0197%" height="15" fill="rgb(207,125,25)" fg:x="3072" fg:w="4"/><text x="15.3592%" y="239.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_texture (4 samples, 0.02%)</title><rect x="15.1092%" y="213" width="0.0197%" height="15" fill="rgb(210,195,18)" fg:x="3072" fg:w="4"/><text x="15.3592%" y="223.50"></text></g><g><title>tiny_voxel`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_texture (4 samples, 0.02%)</title><rect x="15.1092%" y="197" width="0.0197%" height="15" fill="rgb(249,80,12)" fg:x="3072" fg:w="4"/><text x="15.3592%" y="207.50"></text></g><g><title>tiny_voxel`glyph_brush_draw_cache::DrawCache::cache_queued (7 samples, 0.03%)</title><rect x="15.0994%" y="261" width="0.0344%" height="15" fill="rgb(221,65,9)" fg:x="3070" fg:w="7"/><text x="15.3494%" y="271.50"></text></g><g><title>tiny_voxel`glyph_brush::glyph_brush::GlyphBrush&lt;V,X,F,H&gt;::process_queued (16 samples, 0.08%)</title><rect x="15.0698%" y="277" width="0.0787%" height="15" fill="rgb(235,49,36)" fg:x="3064" fg:w="16"/><text x="15.3198%" y="287.50"></text></g><g><title>tiny_voxel`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="15.1731%" y="213" width="0.0148%" height="15" fill="rgb(225,32,20)" fg:x="3085" fg:w="3"/><text x="15.4231%" y="223.50"></text></g><g><title>tiny_voxel`&lt;xi_unicode::LineBreakIterator as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.01%)</title><rect x="15.1731%" y="197" width="0.0148%" height="15" fill="rgb(215,141,46)" fg:x="3085" fg:w="3"/><text x="15.4231%" y="207.50"></text></g><g><title>tiny_voxel`&lt;glyph_brush_layout::characters::Characters&lt;L,F,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.02%)</title><rect x="15.1731%" y="229" width="0.0246%" height="15" fill="rgb(250,160,47)" fg:x="3085" fg:w="5"/><text x="15.4231%" y="239.50"></text></g><g><title>tiny_voxel`&lt;glyph_brush_layout::lines::Lines&lt;L,F,S&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.06%)</title><rect x="15.1485%" y="245" width="0.0590%" height="15" fill="rgb(216,222,40)" fg:x="3080" fg:w="12"/><text x="15.3985%" y="255.50"></text></g><g><title>tiny_voxel`glyph_brush::glyph_brush::GlyphBrush&lt;V,X,F,H&gt;::queue (13 samples, 0.06%)</title><rect x="15.1485%" y="277" width="0.0639%" height="15" fill="rgb(234,217,39)" fg:x="3080" fg:w="13"/><text x="15.3985%" y="287.50"></text></g><g><title>tiny_voxel`&lt;glyph_brush_layout::builtin::Layout&lt;L&gt; as glyph_brush_layout::GlyphPositioner&gt;::calculate_glyphs (13 samples, 0.06%)</title><rect x="15.1485%" y="261" width="0.0639%" height="15" fill="rgb(207,178,40)" fg:x="3080" fg:w="13"/><text x="15.3985%" y="271.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:] (3 samples, 0.01%)</title><rect x="15.2371%" y="165" width="0.0148%" height="15" fill="rgb(221,136,13)" fg:x="3098" fg:w="3"/><text x="15.4871%" y="175.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (5 samples, 0.02%)</title><rect x="15.2518%" y="165" width="0.0246%" height="15" fill="rgb(249,199,10)" fg:x="3101" fg:w="5"/><text x="15.5018%" y="175.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3 samples, 0.01%)</title><rect x="15.2617%" y="149" width="0.0148%" height="15" fill="rgb(249,222,13)" fg:x="3103" fg:w="3"/><text x="15.5117%" y="159.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3 samples, 0.01%)</title><rect x="15.2617%" y="133" width="0.0148%" height="15" fill="rgb(244,185,38)" fg:x="3103" fg:w="3"/><text x="15.5117%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="15.2617%" y="117" width="0.0148%" height="15" fill="rgb(236,202,9)" fg:x="3103" fg:w="3"/><text x="15.5117%" y="127.50"></text></g><g><title>QuartzCore`CA::Render::create_iosurface_with_pixel_format (7 samples, 0.03%)</title><rect x="15.2764%" y="149" width="0.0344%" height="15" fill="rgb(250,229,37)" fg:x="3106" fg:w="7"/><text x="15.5264%" y="159.50"></text></g><g><title>QuartzCore`CA::SurfaceUtil::CAIOSurfaceCreate (7 samples, 0.03%)</title><rect x="15.2764%" y="133" width="0.0344%" height="15" fill="rgb(206,174,23)" fg:x="3106" fg:w="7"/><text x="15.5264%" y="143.50"></text></g><g><title>IOSurface`IOSurfaceCreate (7 samples, 0.03%)</title><rect x="15.2764%" y="117" width="0.0344%" height="15" fill="rgb(211,33,43)" fg:x="3106" fg:w="7"/><text x="15.5264%" y="127.50"></text></g><g><title>IOSurface`-[IOSurface initWithProperties:] (7 samples, 0.03%)</title><rect x="15.2764%" y="101" width="0.0344%" height="15" fill="rgb(245,58,50)" fg:x="3106" fg:w="7"/><text x="15.5264%" y="111.50"></text></g><g><title>IOSurface`IOSurfaceClientCreateChild (7 samples, 0.03%)</title><rect x="15.2764%" y="85" width="0.0344%" height="15" fill="rgb(244,68,36)" fg:x="3106" fg:w="7"/><text x="15.5264%" y="95.50"></text></g><g><title>IOKit`IOConnectCallMethod (6 samples, 0.03%)</title><rect x="15.2813%" y="69" width="0.0295%" height="15" fill="rgb(232,229,15)" fg:x="3107" fg:w="6"/><text x="15.5313%" y="79.50"></text></g><g><title>IOKit`io_connect_method (6 samples, 0.03%)</title><rect x="15.2813%" y="53" width="0.0295%" height="15" fill="rgb(254,30,23)" fg:x="3107" fg:w="6"/><text x="15.5313%" y="63.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (6 samples, 0.03%)</title><rect x="15.2813%" y="37" width="0.0295%" height="15" fill="rgb(235,160,14)" fg:x="3107" fg:w="6"/><text x="15.5313%" y="47.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (9 samples, 0.04%)</title><rect x="15.2764%" y="165" width="0.0443%" height="15" fill="rgb(212,155,44)" fg:x="3106" fg:w="9"/><text x="15.5264%" y="175.50"></text></g><g><title>tiny_voxel`wgpu::Surface::get_current_texture (21 samples, 0.10%)</title><rect x="15.2223%" y="277" width="0.1033%" height="15" fill="rgb(226,2,50)" fg:x="3095" fg:w="21"/><text x="15.4723%" y="287.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_get_current_texture (21 samples, 0.10%)</title><rect x="15.2223%" y="261" width="0.1033%" height="15" fill="rgb(234,177,6)" fg:x="3095" fg:w="21"/><text x="15.4723%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_get_current_texture (20 samples, 0.10%)</title><rect x="15.2272%" y="245" width="0.0984%" height="15" fill="rgb(217,24,9)" fg:x="3096" fg:w="20"/><text x="15.4772%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Surface&gt;::acquire_texture (18 samples, 0.09%)</title><rect x="15.2371%" y="229" width="0.0885%" height="15" fill="rgb(220,13,46)" fg:x="3098" fg:w="18"/><text x="15.4871%" y="239.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (18 samples, 0.09%)</title><rect x="15.2371%" y="213" width="0.0885%" height="15" fill="rgb(239,221,27)" fg:x="3098" fg:w="18"/><text x="15.4871%" y="223.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (18 samples, 0.09%)</title><rect x="15.2371%" y="197" width="0.0885%" height="15" fill="rgb(222,198,25)" fg:x="3098" fg:w="18"/><text x="15.4871%" y="207.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (18 samples, 0.09%)</title><rect x="15.2371%" y="181" width="0.0885%" height="15" fill="rgb(211,99,13)" fg:x="3098" fg:w="18"/><text x="15.4871%" y="191.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::surface_present (3 samples, 0.01%)</title><rect x="15.3256%" y="261" width="0.0148%" height="15" fill="rgb(232,111,31)" fg:x="3116" fg:w="3"/><text x="15.5756%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::present::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::surface_present (3 samples, 0.01%)</title><rect x="15.3256%" y="245" width="0.0148%" height="15" fill="rgb(245,82,37)" fg:x="3116" fg:w="3"/><text x="15.5756%" y="255.50"></text></g><g><title>tiny_voxel`wgpu::SurfaceTexture::present (4 samples, 0.02%)</title><rect x="15.3256%" y="277" width="0.0197%" height="15" fill="rgb(227,149,46)" fg:x="3116" fg:w="4"/><text x="15.5756%" y="287.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::RenderPass::set_index_buffer (4 samples, 0.02%)</title><rect x="15.3453%" y="277" width="0.0197%" height="15" fill="rgb(218,36,50)" fg:x="3120" fg:w="4"/><text x="15.5953%" y="287.50"></text></g><g><title>tiny_voxel`wgpu_render_pass_draw_indexed (4 samples, 0.02%)</title><rect x="15.3649%" y="277" width="0.0197%" height="15" fill="rgb(226,80,48)" fg:x="3124" fg:w="4"/><text x="15.6149%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (4 samples, 0.02%)</title><rect x="15.6453%" y="165" width="0.0197%" height="15" fill="rgb(238,224,15)" fg:x="3181" fg:w="4"/><text x="15.8953%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.02%)</title><rect x="15.6453%" y="181" width="0.0246%" height="15" fill="rgb(241,136,10)" fg:x="3181" fg:w="5"/><text x="15.8953%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.04%)</title><rect x="15.6453%" y="197" width="0.0443%" height="15" fill="rgb(208,32,45)" fg:x="3181" fg:w="9"/><text x="15.8953%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.02%)</title><rect x="15.6699%" y="181" width="0.0197%" height="15" fill="rgb(207,135,9)" fg:x="3186" fg:w="4"/><text x="15.9199%" y="191.50"></text></g><g><title>tiny_voxel`wgpu_render_pass_set_vertex_buffer (74 samples, 0.36%)</title><rect x="15.3846%" y="277" width="0.3640%" height="15" fill="rgb(206,86,44)" fg:x="3128" fg:w="74"/><text x="15.6346%" y="287.50"></text></g><g><title>tiny_voxel`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (22 samples, 0.11%)</title><rect x="15.6404%" y="261" width="0.1082%" height="15" fill="rgb(245,177,15)" fg:x="3180" fg:w="22"/><text x="15.8904%" y="271.50"></text></g><g><title>tiny_voxel`alloc::raw_vec::finish_grow (22 samples, 0.11%)</title><rect x="15.6404%" y="245" width="0.1082%" height="15" fill="rgb(206,64,50)" fg:x="3180" fg:w="22"/><text x="15.8904%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (22 samples, 0.11%)</title><rect x="15.6404%" y="229" width="0.1082%" height="15" fill="rgb(234,36,40)" fg:x="3180" fg:w="22"/><text x="15.8904%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (21 samples, 0.10%)</title><rect x="15.6453%" y="213" width="0.1033%" height="15" fill="rgb(213,64,8)" fg:x="3181" fg:w="21"/><text x="15.8953%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (12 samples, 0.06%)</title><rect x="15.6896%" y="197" width="0.0590%" height="15" fill="rgb(210,75,36)" fg:x="3190" fg:w="12"/><text x="15.9396%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext drawPrimitives:vertexStart:vertexCount:instanceCount:] (6 samples, 0.03%)</title><rect x="15.7584%" y="229" width="0.0295%" height="15" fill="rgb(229,88,21)" fg:x="3204" fg:w="6"/><text x="16.0084%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits (5 samples, 0.02%)</title><rect x="15.7633%" y="213" width="0.0246%" height="15" fill="rgb(252,204,47)" fg:x="3205" fg:w="5"/><text x="16.0133%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (5 samples, 0.02%)</title><rect x="15.8076%" y="165" width="0.0246%" height="15" fill="rgb(208,77,27)" fg:x="3214" fg:w="5"/><text x="16.0576%" y="175.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginRenderPass (4 samples, 0.02%)</title><rect x="15.8125%" y="149" width="0.0197%" height="15" fill="rgb(221,76,26)" fg:x="3215" fg:w="4"/><text x="16.0625%" y="159.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::RenderPassInfo&lt;A&gt;::start (9 samples, 0.04%)</title><rect x="15.7978%" y="229" width="0.0443%" height="15" fill="rgb(225,139,18)" fg:x="3212" fg:w="9"/><text x="16.0478%" y="239.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (8 samples, 0.04%)</title><rect x="15.8027%" y="213" width="0.0393%" height="15" fill="rgb(230,137,11)" fg:x="3213" fg:w="8"/><text x="16.0527%" y="223.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (8 samples, 0.04%)</title><rect x="15.8027%" y="197" width="0.0393%" height="15" fill="rgb(212,28,1)" fg:x="3213" fg:w="8"/><text x="16.0527%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (7 samples, 0.03%)</title><rect x="15.8076%" y="181" width="0.0344%" height="15" fill="rgb(248,164,17)" fg:x="3214" fg:w="7"/><text x="16.0576%" y="191.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (22 samples, 0.11%)</title><rect x="15.7535%" y="245" width="0.1082%" height="15" fill="rgb(222,171,42)" fg:x="3203" fg:w="22"/><text x="16.0035%" y="255.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (24 samples, 0.12%)</title><rect x="15.7486%" y="261" width="0.1180%" height="15" fill="rgb(243,84,45)" fg:x="3202" fg:w="24"/><text x="15.9986%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_text::pipeline::Pipeline::draw (27 samples, 0.13%)</title><rect x="15.7486%" y="277" width="0.1328%" height="15" fill="rgb(252,49,23)" fg:x="3202" fg:w="27"/><text x="15.9986%" y="287.50"></text></g><g><title>tiny_voxel`wgpu::Device::create_command_encoder (3 samples, 0.01%)</title><rect x="15.8666%" y="261" width="0.0148%" height="15" fill="rgb(215,19,7)" fg:x="3226" fg:w="3"/><text x="16.1166%" y="271.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (3 samples, 0.01%)</title><rect x="15.8666%" y="245" width="0.0148%" height="15" fill="rgb(238,81,41)" fg:x="3226" fg:w="3"/><text x="16.1166%" y="255.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (9 samples, 0.04%)</title><rect x="15.8912%" y="181" width="0.0443%" height="15" fill="rgb(210,199,37)" fg:x="3231" fg:w="9"/><text x="16.1412%" y="191.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (9 samples, 0.04%)</title><rect x="15.8912%" y="165" width="0.0443%" height="15" fill="rgb(244,192,49)" fg:x="3231" fg:w="9"/><text x="16.1412%" y="175.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (9 samples, 0.04%)</title><rect x="15.8912%" y="149" width="0.0443%" height="15" fill="rgb(226,211,11)" fg:x="3231" fg:w="9"/><text x="16.1412%" y="159.50"></text></g><g><title>IOKit`IOConnectCallMethod (9 samples, 0.04%)</title><rect x="15.8912%" y="133" width="0.0443%" height="15" fill="rgb(236,162,54)" fg:x="3231" fg:w="9"/><text x="16.1412%" y="143.50"></text></g><g><title>IOKit`io_connect_method (9 samples, 0.04%)</title><rect x="15.8912%" y="117" width="0.0443%" height="15" fill="rgb(220,229,9)" fg:x="3231" fg:w="9"/><text x="16.1412%" y="127.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (8 samples, 0.04%)</title><rect x="15.8961%" y="101" width="0.0393%" height="15" fill="rgb(250,87,22)" fg:x="3232" fg:w="8"/><text x="16.1461%" y="111.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (10 samples, 0.05%)</title><rect x="15.8912%" y="213" width="0.0492%" height="15" fill="rgb(239,43,17)" fg:x="3231" fg:w="10"/><text x="16.1412%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (10 samples, 0.05%)</title><rect x="15.8912%" y="197" width="0.0492%" height="15" fill="rgb(231,177,25)" fg:x="3231" fg:w="10"/><text x="16.1412%" y="207.50"></text></g><g><title>tiny_voxel`wgpu_text::pipeline::Pipeline::update_buffer (13 samples, 0.06%)</title><rect x="15.8814%" y="277" width="0.0639%" height="15" fill="rgb(219,179,1)" fg:x="3229" fg:w="13"/><text x="16.1314%" y="287.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (13 samples, 0.06%)</title><rect x="15.8814%" y="261" width="0.0639%" height="15" fill="rgb(238,219,53)" fg:x="3229" fg:w="13"/><text x="16.1314%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (13 samples, 0.06%)</title><rect x="15.8814%" y="245" width="0.0639%" height="15" fill="rgb(232,167,36)" fg:x="3229" fg:w="13"/><text x="16.1314%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (11 samples, 0.05%)</title><rect x="15.8912%" y="229" width="0.0541%" height="15" fill="rgb(244,19,51)" fg:x="3231" fg:w="11"/><text x="16.1412%" y="239.50"></text></g><g><title>tiny_voxel`tiny_voxel::State::render (2,701 samples, 13.28%)</title><rect x="2.6805%" y="293" width="13.2845%" height="15" fill="rgb(224,6,22)" fg:x="545" fg:w="2701"/><text x="2.9305%" y="303.50">tiny_voxel`tiny_voxe..</text></g><g><title>tiny_voxel`wgpu_text::pipeline::Vertex::to_vertex (4 samples, 0.02%)</title><rect x="15.9453%" y="277" width="0.0197%" height="15" fill="rgb(224,145,5)" fg:x="3242" fg:w="4"/><text x="16.1953%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (89 samples, 0.44%)</title><rect x="47.4179%" y="277" width="0.4377%" height="15" fill="rgb(234,130,49)" fg:x="9641" fg:w="89"/><text x="47.6679%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (59 samples, 0.29%)</title><rect x="47.8556%" y="277" width="0.2902%" height="15" fill="rgb(254,6,2)" fg:x="9730" fg:w="59"/><text x="48.1056%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free (127 samples, 0.62%)</title><rect x="48.1458%" y="277" width="0.6246%" height="15" fill="rgb(208,96,46)" fg:x="9789" fg:w="127"/><text x="48.3958%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (242 samples, 1.19%)</title><rect x="48.7802%" y="277" width="1.1902%" height="15" fill="rgb(239,3,39)" fg:x="9918" fg:w="242"/><text x="49.0302%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (43 samples, 0.21%)</title><rect x="49.9705%" y="277" width="0.2115%" height="15" fill="rgb(233,210,1)" fg:x="10160" fg:w="43"/><text x="50.2205%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (26 samples, 0.13%)</title><rect x="50.1820%" y="277" width="0.1279%" height="15" fill="rgb(244,137,37)" fg:x="10203" fg:w="26"/><text x="50.4320%" y="287.50"></text></g><g><title>tiny_voxel`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,2_usize&gt;&gt;::get (99 samples, 0.49%)</title><rect x="50.3099%" y="277" width="0.4869%" height="15" fill="rgb(240,136,2)" fg:x="10229" fg:w="99"/><text x="50.5599%" y="287.50"></text></g><g><title>tiny_voxel`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,3_usize&gt;&gt;::get (2,435 samples, 11.98%)</title><rect x="50.7968%" y="277" width="11.9762%" height="15" fill="rgb(239,18,37)" fg:x="10328" fg:w="2435"/><text x="51.0468%" y="287.50">tiny_voxel`&lt;noise:..</text></g><g><title>tiny_voxel`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (38 samples, 0.19%)</title><rect x="62.7730%" y="277" width="0.1869%" height="15" fill="rgb(218,185,22)" fg:x="12763" fg:w="38"/><text x="63.0230%" y="287.50"></text></g><g><title>tiny_voxel`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (47 samples, 0.23%)</title><rect x="62.9599%" y="277" width="0.2312%" height="15" fill="rgb(225,218,4)" fg:x="12801" fg:w="47"/><text x="63.2099%" y="287.50"></text></g><g><title>AGXMetalG15G_C0`AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer (3 samples, 0.01%)</title><rect x="63.1910%" y="229" width="0.0148%" height="15" fill="rgb(230,182,32)" fg:x="12848" fg:w="3"/><text x="63.4410%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::beginComputePass (3 samples, 0.01%)</title><rect x="63.1910%" y="213" width="0.0148%" height="15" fill="rgb(242,56,43)" fg:x="12848" fg:w="3"/><text x="63.4410%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (4 samples, 0.02%)</title><rect x="63.1910%" y="245" width="0.0197%" height="15" fill="rgb(233,99,24)" fg:x="12848" fg:w="4"/><text x="63.4410%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::device::queue::PendingWrites&lt;A&gt;::activate (3 samples, 0.01%)</title><rect x="63.2107%" y="245" width="0.0148%" height="15" fill="rgb(234,209,42)" fg:x="12852" fg:w="3"/><text x="63.4607%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (3 samples, 0.01%)</title><rect x="63.2107%" y="229" width="0.0148%" height="15" fill="rgb(227,7,12)" fg:x="12852" fg:w="3"/><text x="63.4607%" y="239.50"></text></g><g><title>tiny_voxel`objc::rc::autorelease::autoreleasepool (3 samples, 0.01%)</title><rect x="63.2107%" y="213" width="0.0148%" height="15" fill="rgb(245,203,43)" fg:x="12852" fg:w="3"/><text x="63.4607%" y="223.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandQueue commandBufferWithUnretainedReferences] (3 samples, 0.01%)</title><rect x="63.2107%" y="197" width="0.0148%" height="15" fill="rgb(238,205,33)" fg:x="12852" fg:w="3"/><text x="63.4607%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyCommandBuffer initWithQueue:retainedReferences:] (3 samples, 0.01%)</title><rect x="63.2107%" y="181" width="0.0148%" height="15" fill="rgb(231,56,7)" fg:x="12852" fg:w="3"/><text x="63.4607%" y="191.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (3 samples, 0.01%)</title><rect x="63.2107%" y="165" width="0.0148%" height="15" fill="rgb(244,186,29)" fg:x="12852" fg:w="3"/><text x="63.4607%" y="175.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (18 samples, 0.09%)</title><rect x="63.2402%" y="165" width="0.0885%" height="15" fill="rgb(234,111,31)" fg:x="12858" fg:w="18"/><text x="63.4902%" y="175.50"></text></g><g><title>IOKit`IOConnectCallMethod (18 samples, 0.09%)</title><rect x="63.2402%" y="149" width="0.0885%" height="15" fill="rgb(241,149,10)" fg:x="12858" fg:w="18"/><text x="63.4902%" y="159.50"></text></g><g><title>IOKit`io_connect_method (18 samples, 0.09%)</title><rect x="63.2402%" y="133" width="0.0885%" height="15" fill="rgb(249,206,44)" fg:x="12858" fg:w="18"/><text x="63.4902%" y="143.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (18 samples, 0.09%)</title><rect x="63.2402%" y="117" width="0.0885%" height="15" fill="rgb(251,153,30)" fg:x="12858" fg:w="18"/><text x="63.4902%" y="127.50"></text></g><g><title>tiny_voxel`wgpu_core::device::queue::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_write_buffer (29 samples, 0.14%)</title><rect x="63.1910%" y="261" width="0.1426%" height="15" fill="rgb(239,152,38)" fg:x="12848" fg:w="29"/><text x="63.4410%" y="271.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (19 samples, 0.09%)</title><rect x="63.2402%" y="245" width="0.0934%" height="15" fill="rgb(249,139,47)" fg:x="12858" fg:w="19"/><text x="63.4902%" y="255.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (19 samples, 0.09%)</title><rect x="63.2402%" y="229" width="0.0934%" height="15" fill="rgb(244,64,35)" fg:x="12858" fg:w="19"/><text x="63.4902%" y="239.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (19 samples, 0.09%)</title><rect x="63.2402%" y="213" width="0.0934%" height="15" fill="rgb(216,46,15)" fg:x="12858" fg:w="19"/><text x="63.4902%" y="223.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (19 samples, 0.09%)</title><rect x="63.2402%" y="197" width="0.0934%" height="15" fill="rgb(250,74,19)" fg:x="12858" fg:w="19"/><text x="63.4902%" y="207.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (19 samples, 0.09%)</title><rect x="63.2402%" y="181" width="0.0934%" height="15" fill="rgb(249,42,33)" fg:x="12858" fg:w="19"/><text x="63.4902%" y="191.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_write_buffer (30 samples, 0.15%)</title><rect x="63.1910%" y="277" width="0.1476%" height="15" fill="rgb(242,149,17)" fg:x="12848" fg:w="30"/><text x="63.4410%" y="287.50"></text></g><g><title>tiny_voxel`DYLD-STUB$$free (43 samples, 0.21%)</title><rect x="63.3386%" y="277" width="0.2115%" height="15" fill="rgb(244,29,21)" fg:x="12878" fg:w="43"/><text x="63.5886%" y="287.50"></text></g><g><title>tiny_voxel`DYLD-STUB$$malloc (25 samples, 0.12%)</title><rect x="63.5501%" y="277" width="0.1230%" height="15" fill="rgb(220,130,37)" fg:x="12921" fg:w="25"/><text x="63.8001%" y="287.50"></text></g><g><title>tiny_voxel`__rdl_alloc (53 samples, 0.26%)</title><rect x="63.6779%" y="277" width="0.2607%" height="15" fill="rgb(211,67,2)" fg:x="12947" fg:w="53"/><text x="63.9279%" y="287.50"></text></g><g><title>tiny_voxel`__rust_alloc (25 samples, 0.12%)</title><rect x="63.9435%" y="277" width="0.1230%" height="15" fill="rgb(235,68,52)" fg:x="13001" fg:w="25"/><text x="64.1935%" y="287.50"></text></g><g><title>tiny_voxel`__rust_dealloc (9 samples, 0.04%)</title><rect x="64.0665%" y="277" width="0.0443%" height="15" fill="rgb(246,142,3)" fg:x="13026" fg:w="9"/><text x="64.3165%" y="287.50"></text></g><g><title>tiny_voxel`core::hash::BuildHasher::hash_one (68 samples, 0.33%)</title><rect x="64.1157%" y="277" width="0.3344%" height="15" fill="rgb(241,25,7)" fg:x="13036" fg:w="68"/><text x="64.3657%" y="287.50"></text></g><g><title>tiny_voxel`core::ptr::drop_in_place&lt;tiny_voxel::block::Chunk&gt; (4 samples, 0.02%)</title><rect x="64.4501%" y="277" width="0.0197%" height="15" fill="rgb(242,119,39)" fg:x="13104" fg:w="4"/><text x="64.7001%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_small (3 samples, 0.01%)</title><rect x="64.4550%" y="261" width="0.0148%" height="15" fill="rgb(241,98,45)" fg:x="13105" fg:w="3"/><text x="64.7050%" y="271.50"></text></g><g><title>tiny_voxel`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.01%)</title><rect x="64.4698%" y="277" width="0.0148%" height="15" fill="rgb(254,28,30)" fg:x="13108" fg:w="3"/><text x="64.7198%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.04%)</title><rect x="64.5829%" y="261" width="0.0393%" height="15" fill="rgb(241,142,54)" fg:x="13131" fg:w="8"/><text x="64.8329%" y="271.50"></text></g><g><title>tiny_voxel`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (3 samples, 0.01%)</title><rect x="64.6272%" y="261" width="0.0148%" height="15" fill="rgb(222,85,15)" fg:x="13140" fg:w="3"/><text x="64.8772%" y="271.50"></text></g><g><title>tiny_voxel`tiny_voxel::block::Chunk::create_mesh (55 samples, 0.27%)</title><rect x="64.4846%" y="277" width="0.2705%" height="15" fill="rgb(210,85,47)" fg:x="13111" fg:w="55"/><text x="64.7346%" y="287.50"></text></g><g><title>tiny_voxel`tiny_voxel::block::get_solid (22 samples, 0.11%)</title><rect x="64.6469%" y="261" width="0.1082%" height="15" fill="rgb(224,206,25)" fg:x="13144" fg:w="22"/><text x="64.8969%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (303 samples, 1.49%)</title><rect x="69.9439%" y="261" width="1.4903%" height="15" fill="rgb(243,201,19)" fg:x="14221" fg:w="303"/><text x="70.1939%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.10%)</title><rect x="71.4489%" y="261" width="0.0984%" height="15" fill="rgb(236,59,4)" fg:x="14527" fg:w="20"/><text x="71.6989%" y="271.50"></text></g><g><title>AGXMetalG15G_C0`AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::bindComputeResources (3 samples, 0.01%)</title><rect x="71.5572%" y="181" width="0.0148%" height="15" fill="rgb(254,179,45)" fg:x="14549" fg:w="3"/><text x="71.8072%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::checkDependentBlits (3 samples, 0.01%)</title><rect x="71.5719%" y="181" width="0.0148%" height="15" fill="rgb(226,14,10)" fg:x="14552" fg:w="3"/><text x="71.8219%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`AGX::BlitDispatchContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::blitCDMBuffer (7 samples, 0.03%)</title><rect x="71.5572%" y="197" width="0.0344%" height="15" fill="rgb(244,27,41)" fg:x="14549" fg:w="7"/><text x="71.8072%" y="207.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (8 samples, 0.04%)</title><rect x="71.5572%" y="213" width="0.0393%" height="15" fill="rgb(235,35,32)" fg:x="14549" fg:w="8"/><text x="71.8072%" y="223.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (9 samples, 0.04%)</title><rect x="71.5572%" y="245" width="0.0443%" height="15" fill="rgb(218,68,31)" fg:x="14549" fg:w="9"/><text x="71.8072%" y="255.50"></text></g><g><title>tiny_voxel`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (9 samples, 0.04%)</title><rect x="71.5572%" y="229" width="0.0443%" height="15" fill="rgb(207,120,37)" fg:x="14549" fg:w="9"/><text x="71.8072%" y="239.50"></text></g><g><title>libsystem_platform.dylib`__bzero (79 samples, 0.39%)</title><rect x="71.6063%" y="229" width="0.3886%" height="15" fill="rgb(227,98,0)" fg:x="14559" fg:w="79"/><text x="71.8563%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (4 samples, 0.02%)</title><rect x="71.9949%" y="229" width="0.0197%" height="15" fill="rgb(207,7,3)" fg:x="14638" fg:w="4"/><text x="72.2449%" y="239.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (58 samples, 0.29%)</title><rect x="72.0687%" y="117" width="0.2853%" height="15" fill="rgb(206,98,19)" fg:x="14653" fg:w="58"/><text x="72.3187%" y="127.50"></text></g><g><title>IOKit`IOConnectCallMethod (58 samples, 0.29%)</title><rect x="72.0687%" y="101" width="0.2853%" height="15" fill="rgb(217,5,26)" fg:x="14653" fg:w="58"/><text x="72.3187%" y="111.50"></text></g><g><title>IOKit`io_connect_method (58 samples, 0.29%)</title><rect x="72.0687%" y="85" width="0.2853%" height="15" fill="rgb(235,190,38)" fg:x="14653" fg:w="58"/><text x="72.3187%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (56 samples, 0.28%)</title><rect x="72.0785%" y="69" width="0.2754%" height="15" fill="rgb(247,86,24)" fg:x="14655" fg:w="56"/><text x="72.3285%" y="79.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (60 samples, 0.30%)</title><rect x="72.0637%" y="149" width="0.2951%" height="15" fill="rgb(205,101,16)" fg:x="14652" fg:w="60"/><text x="72.3137%" y="159.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (60 samples, 0.30%)</title><rect x="72.0637%" y="133" width="0.2951%" height="15" fill="rgb(246,168,33)" fg:x="14652" fg:w="60"/><text x="72.3137%" y="143.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (17 samples, 0.08%)</title><rect x="72.3588%" y="117" width="0.0836%" height="15" fill="rgb(231,114,1)" fg:x="14712" fg:w="17"/><text x="72.6088%" y="127.50"></text></g><g><title>IOKit`IOConnectCallMethod (16 samples, 0.08%)</title><rect x="72.3638%" y="101" width="0.0787%" height="15" fill="rgb(207,184,53)" fg:x="14713" fg:w="16"/><text x="72.6138%" y="111.50"></text></g><g><title>IOKit`io_connect_method (16 samples, 0.08%)</title><rect x="72.3638%" y="85" width="0.0787%" height="15" fill="rgb(224,95,51)" fg:x="14713" fg:w="16"/><text x="72.6138%" y="95.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (16 samples, 0.08%)</title><rect x="72.3638%" y="69" width="0.0787%" height="15" fill="rgb(212,188,45)" fg:x="14713" fg:w="16"/><text x="72.6138%" y="79.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (5 samples, 0.02%)</title><rect x="72.4425%" y="117" width="0.0246%" height="15" fill="rgb(223,154,38)" fg:x="14729" fg:w="5"/><text x="72.6925%" y="127.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (4 samples, 0.02%)</title><rect x="72.4474%" y="101" width="0.0197%" height="15" fill="rgb(251,22,52)" fg:x="14730" fg:w="4"/><text x="72.6974%" y="111.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (23 samples, 0.11%)</title><rect x="72.3588%" y="133" width="0.1131%" height="15" fill="rgb(229,209,22)" fg:x="14712" fg:w="23"/><text x="72.6088%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (24 samples, 0.12%)</title><rect x="72.3588%" y="149" width="0.1180%" height="15" fill="rgb(234,138,34)" fg:x="14712" fg:w="24"/><text x="72.6088%" y="159.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorAllocate (4 samples, 0.02%)</title><rect x="72.4769%" y="133" width="0.0197%" height="15" fill="rgb(212,95,11)" fg:x="14736" fg:w="4"/><text x="72.7269%" y="143.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (12 samples, 0.06%)</title><rect x="72.4769%" y="149" width="0.0590%" height="15" fill="rgb(240,179,47)" fg:x="14736" fg:w="12"/><text x="72.7269%" y="159.50"></text></g><g><title>Metal`MTLRangeAllocatorGetMaxFreeSize (8 samples, 0.04%)</title><rect x="72.4966%" y="133" width="0.0393%" height="15" fill="rgb(240,163,11)" fg:x="14740" fg:w="8"/><text x="72.7466%" y="143.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (101 samples, 0.50%)</title><rect x="72.0588%" y="181" width="0.4968%" height="15" fill="rgb(236,37,12)" fg:x="14651" fg:w="101"/><text x="72.3088%" y="191.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (101 samples, 0.50%)</title><rect x="72.0588%" y="165" width="0.4968%" height="15" fill="rgb(232,164,16)" fg:x="14651" fg:w="101"/><text x="72.3088%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="72.5408%" y="149" width="0.0148%" height="15" fill="rgb(244,205,15)" fg:x="14749" fg:w="3"/><text x="72.7908%" y="159.50"></text></g><g><title>tiny_voxel`wgpu_core::device::Device&lt;A&gt;::create_buffer (111 samples, 0.55%)</title><rect x="72.0392%" y="213" width="0.5459%" height="15" fill="rgb(223,117,47)" fg:x="14647" fg:w="111"/><text x="72.2892%" y="223.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (108 samples, 0.53%)</title><rect x="72.0539%" y="197" width="0.5312%" height="15" fill="rgb(244,107,35)" fg:x="14650" fg:w="108"/><text x="72.3039%" y="207.50"></text></g><g><title>tiny_voxel`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (119 samples, 0.59%)</title><rect x="72.0195%" y="229" width="0.5853%" height="15" fill="rgb(205,140,8)" fg:x="14643" fg:w="119"/><text x="72.2695%" y="239.50"></text></g><g><title>tiny_voxel`wgpu_core::track::ResourceTracker&lt;S&gt;::init (3 samples, 0.01%)</title><rect x="72.5900%" y="213" width="0.0148%" height="15" fill="rgb(228,84,46)" fg:x="14759" fg:w="3"/><text x="72.8400%" y="223.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (205 samples, 1.01%)</title><rect x="71.6014%" y="245" width="1.0083%" height="15" fill="rgb(254,188,9)" fg:x="14558" fg:w="205"/><text x="71.8514%" y="255.50"></text></g><g><title>tiny_voxel`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (218 samples, 1.07%)</title><rect x="71.5473%" y="261" width="1.0722%" height="15" fill="rgb(206,112,54)" fg:x="14547" fg:w="218"/><text x="71.7973%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (11 samples, 0.05%)</title><rect x="72.6343%" y="181" width="0.0541%" height="15" fill="rgb(216,84,49)" fg:x="14768" fg:w="11"/><text x="72.8843%" y="191.50"></text></g><g><title>libsystem_kernel.dylib`madvise (11 samples, 0.05%)</title><rect x="72.6343%" y="165" width="0.0541%" height="15" fill="rgb(214,194,35)" fg:x="14768" fg:w="11"/><text x="72.8843%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (17 samples, 0.08%)</title><rect x="72.6294%" y="197" width="0.0836%" height="15" fill="rgb(249,28,3)" fg:x="14767" fg:w="17"/><text x="72.8794%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.01%)</title><rect x="72.6982%" y="181" width="0.0148%" height="15" fill="rgb(222,56,52)" fg:x="14781" fg:w="3"/><text x="72.9482%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.01%)</title><rect x="72.6982%" y="165" width="0.0148%" height="15" fill="rgb(245,217,50)" fg:x="14781" fg:w="3"/><text x="72.9482%" y="175.50"></text></g><g><title>tiny_voxel`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (52 samples, 0.26%)</title><rect x="72.6294%" y="261" width="0.2558%" height="15" fill="rgb(213,201,24)" fg:x="14767" fg:w="52"/><text x="72.8794%" y="271.50"></text></g><g><title>tiny_voxel`alloc::raw_vec::finish_grow (52 samples, 0.26%)</title><rect x="72.6294%" y="245" width="0.2558%" height="15" fill="rgb(248,116,28)" fg:x="14767" fg:w="52"/><text x="72.8794%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (52 samples, 0.26%)</title><rect x="72.6294%" y="229" width="0.2558%" height="15" fill="rgb(219,72,43)" fg:x="14767" fg:w="52"/><text x="72.8794%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (52 samples, 0.26%)</title><rect x="72.6294%" y="213" width="0.2558%" height="15" fill="rgb(209,138,14)" fg:x="14767" fg:w="52"/><text x="72.8794%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (35 samples, 0.17%)</title><rect x="72.7130%" y="197" width="0.1721%" height="15" fill="rgb(222,18,33)" fg:x="14784" fg:w="35"/><text x="72.9630%" y="207.50"></text></g><g><title>tiny_voxel`core::hash::BuildHasher::hash_one (29 samples, 0.14%)</title><rect x="72.8851%" y="261" width="0.1426%" height="15" fill="rgb(213,199,7)" fg:x="14819" fg:w="29"/><text x="73.1351%" y="271.50"></text></g><g><title>tiny_voxel`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (66 samples, 0.32%)</title><rect x="76.1706%" y="245" width="0.3246%" height="15" fill="rgb(250,110,10)" fg:x="15487" fg:w="66"/><text x="76.4206%" y="255.50"></text></g><g><title>tiny_voxel`tiny_voxel::block::Chunk::new (2,415 samples, 11.88%)</title><rect x="64.7551%" y="277" width="11.8778%" height="15" fill="rgb(248,123,6)" fg:x="13166" fg:w="2415"/><text x="65.0051%" y="287.50">tiny_voxel`tiny_vo..</text></g><g><title>tiny_voxel`tiny_voxel::block::get_solid (731 samples, 3.60%)</title><rect x="73.0376%" y="261" width="3.5953%" height="15" fill="rgb(206,91,31)" fg:x="14850" fg:w="731"/><text x="73.2876%" y="271.50">tiny..</text></g><g><title>tiny_voxel`core::hash::BuildHasher::hash_one (28 samples, 0.14%)</title><rect x="76.4952%" y="245" width="0.1377%" height="15" fill="rgb(211,154,13)" fg:x="15553" fg:w="28"/><text x="76.7452%" y="255.50"></text></g><g><title>tiny_voxel`tiny_voxel::block::get_solid (883 samples, 4.34%)</title><rect x="76.6329%" y="277" width="4.3429%" height="15" fill="rgb(225,148,7)" fg:x="15581" fg:w="883"/><text x="76.8829%" y="287.50">tiny_..</text></g><g><title>tiny_voxel`tiny_voxel::State::update (13,219 samples, 65.02%)</title><rect x="15.9650%" y="293" width="65.0157%" height="15" fill="rgb(220,160,43)" fg:x="3246" fg:w="13219"/><text x="16.2150%" y="303.50">tiny_voxel`tiny_voxel::State::update</text></g><g><title>tiny_voxel`wgpu_core::command::render::RenderPass::set_index_buffer (5 samples, 0.02%)</title><rect x="80.9955%" y="293" width="0.0246%" height="15" fill="rgb(213,52,39)" fg:x="16468" fg:w="5"/><text x="81.2455%" y="303.50"></text></g><g><title>tiny_voxel`wgpu_render_pass_draw_indexed (19 samples, 0.09%)</title><rect x="81.0201%" y="293" width="0.0934%" height="15" fill="rgb(243,137,7)" fg:x="16473" fg:w="19"/><text x="81.2701%" y="303.50"></text></g><g><title>tiny_voxel`wgpu_render_pass_set_vertex_buffer (15 samples, 0.07%)</title><rect x="81.1135%" y="293" width="0.0738%" height="15" fill="rgb(230,79,13)" fg:x="16492" fg:w="15"/><text x="81.3635%" y="303.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (16,005 samples, 78.72%)</title><rect x="2.4739%" y="405" width="78.7183%" height="15" fill="rgb(247,105,23)" fg:x="503" fg:w="16005"/><text x="2.7239%" y="415.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__</text></g><g><title>tiny_voxel`winit::platform_impl::platform::observer::control_flow_end_handler (15,976 samples, 78.58%)</title><rect x="2.6166%" y="389" width="78.5756%" height="15" fill="rgb(223,179,41)" fg:x="532" fg:w="15976"/><text x="2.8666%" y="399.50">tiny_voxel`winit::platform_impl::platform::observer::control_flow_end_handler</text></g><g><title>tiny_voxel`std::panicking::try (15,976 samples, 78.58%)</title><rect x="2.6166%" y="373" width="78.5756%" height="15" fill="rgb(218,9,34)" fg:x="532" fg:w="15976"/><text x="2.8666%" y="383.50">tiny_voxel`std::panicking::try</text></g><g><title>tiny_voxel`winit::platform_impl::platform::app_state::AppState::cleared (15,976 samples, 78.58%)</title><rect x="2.6166%" y="357" width="78.5756%" height="15" fill="rgb(222,106,8)" fg:x="532" fg:w="15976"/><text x="2.8666%" y="367.50">tiny_voxel`winit::platform_impl::platform::app_state::AppState::cleared</text></g><g><title>tiny_voxel`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (15,972 samples, 78.56%)</title><rect x="2.6362%" y="341" width="78.5560%" height="15" fill="rgb(211,220,0)" fg:x="536" fg:w="15972"/><text x="2.8862%" y="351.50">tiny_voxel`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event</text></g><g><title>tiny_voxel`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (15,971 samples, 78.55%)</title><rect x="2.6412%" y="325" width="78.5511%" height="15" fill="rgb(229,52,16)" fg:x="537" fg:w="15971"/><text x="2.8912%" y="335.50">tiny_voxel`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandl..</text></g><g><title>tiny_voxel`tiny_voxel::run::_{{closure}}::_{{closure}} (15,971 samples, 78.55%)</title><rect x="2.6412%" y="309" width="78.5511%" height="15" fill="rgb(212,155,18)" fg:x="537" fg:w="15971"/><text x="2.8912%" y="319.50">tiny_voxel`tiny_voxel::run::_{{closure}}::_{{closure}}</text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (16,008 samples, 78.73%)</title><rect x="2.4690%" y="421" width="78.7330%" height="15" fill="rgb(242,21,14)" fg:x="502" fg:w="16008"/><text x="2.7190%" y="431.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (3 samples, 0.01%)</title><rect x="81.2020%" y="421" width="0.0148%" height="15" fill="rgb(222,19,48)" fg:x="16510" fg:w="3"/><text x="81.4520%" y="431.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (3 samples, 0.01%)</title><rect x="81.2020%" y="405" width="0.0148%" height="15" fill="rgb(232,45,27)" fg:x="16510" fg:w="3"/><text x="81.4520%" y="415.50"></text></g><g><title>HIServices`mshMIGPerform (3 samples, 0.01%)</title><rect x="81.2020%" y="389" width="0.0148%" height="15" fill="rgb(249,103,42)" fg:x="16510" fg:w="3"/><text x="81.4520%" y="399.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (67 samples, 0.33%)</title><rect x="81.2168%" y="421" width="0.3295%" height="15" fill="rgb(246,81,33)" fg:x="16513" fg:w="67"/><text x="81.4668%" y="431.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (67 samples, 0.33%)</title><rect x="81.2168%" y="405" width="0.3295%" height="15" fill="rgb(252,33,42)" fg:x="16513" fg:w="67"/><text x="81.4668%" y="415.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (16,106 samples, 79.22%)</title><rect x="2.3510%" y="437" width="79.2150%" height="15" fill="rgb(209,212,41)" fg:x="478" fg:w="16106"/><text x="2.6010%" y="447.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (16,121 samples, 79.29%)</title><rect x="2.2821%" y="453" width="79.2888%" height="15" fill="rgb(207,154,6)" fg:x="464" fg:w="16121"/><text x="2.5321%" y="463.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (16,127 samples, 79.32%)</title><rect x="2.2821%" y="469" width="79.3183%" height="15" fill="rgb(223,64,47)" fg:x="464" fg:w="16127"/><text x="2.5321%" y="479.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (4 samples, 0.02%)</title><rect x="81.5808%" y="453" width="0.0197%" height="15" fill="rgb(211,161,38)" fg:x="16587" fg:w="4"/><text x="81.8308%" y="463.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (4 samples, 0.02%)</title><rect x="81.5808%" y="437" width="0.0197%" height="15" fill="rgb(219,138,40)" fg:x="16587" fg:w="4"/><text x="81.8308%" y="447.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (4 samples, 0.02%)</title><rect x="81.5808%" y="421" width="0.0197%" height="15" fill="rgb(241,228,46)" fg:x="16587" fg:w="4"/><text x="81.8308%" y="431.50"></text></g><g><title>AppKit`_DPSNextEvent (16,137 samples, 79.37%)</title><rect x="2.2428%" y="517" width="79.3675%" height="15" fill="rgb(223,209,38)" fg:x="456" fg:w="16137"/><text x="2.4928%" y="527.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (16,131 samples, 79.34%)</title><rect x="2.2723%" y="501" width="79.3380%" height="15" fill="rgb(236,164,45)" fg:x="462" fg:w="16131"/><text x="2.5223%" y="511.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (16,130 samples, 79.33%)</title><rect x="2.2772%" y="485" width="79.3331%" height="15" fill="rgb(231,15,5)" fg:x="463" fg:w="16130"/><text x="2.5272%" y="495.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isMenuBarOwner] (4 samples, 0.02%)</title><rect x="81.6103%" y="405" width="0.0197%" height="15" fill="rgb(252,35,15)" fg:x="16593" fg:w="4"/><text x="81.8603%" y="415.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isAutoShowHideAllowed] (5 samples, 0.02%)</title><rect x="81.6103%" y="421" width="0.0246%" height="15" fill="rgb(248,181,18)" fg:x="16593" fg:w="5"/><text x="81.8603%" y="431.50"></text></g><g><title>AppKit`-[NSMenuBarDisplayManager notchBoundsForDisplay:] (4 samples, 0.02%)</title><rect x="81.6545%" y="325" width="0.0197%" height="15" fill="rgb(233,39,42)" fg:x="16602" fg:w="4"/><text x="81.9045%" y="335.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachBoundsDo:] (9 samples, 0.04%)</title><rect x="81.6349%" y="405" width="0.0443%" height="15" fill="rgb(238,110,33)" fg:x="16598" fg:w="9"/><text x="81.8849%" y="415.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachWindowDo:withBlock:] (9 samples, 0.04%)</title><rect x="81.6349%" y="389" width="0.0443%" height="15" fill="rgb(233,195,10)" fg:x="16598" fg:w="9"/><text x="81.8849%" y="399.50"></text></g><g><title>AppKit`__50-[NSMenuBarPresentationInstance _forEachBoundsDo:]_block_invoke (6 samples, 0.03%)</title><rect x="81.6496%" y="373" width="0.0295%" height="15" fill="rgb(254,105,3)" fg:x="16601" fg:w="6"/><text x="81.8996%" y="383.50"></text></g><g><title>AppKit`__113-[NSMenuBarPresentationInstance _isMouseInMenuBarHotRegion:makeVisibleBoundsPtr:keepVisibleBoundsPtr:displayPtr:]_block_invoke (6 samples, 0.03%)</title><rect x="81.6496%" y="357" width="0.0295%" height="15" fill="rgb(221,225,9)" fg:x="16601" fg:w="6"/><text x="81.8996%" y="367.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _hasStationaryMenuBarOnDisplay:] (5 samples, 0.02%)</title><rect x="81.6545%" y="341" width="0.0246%" height="15" fill="rgb(224,227,45)" fg:x="16602" fg:w="5"/><text x="81.9045%" y="351.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance forEachMenuBarDo:] (15 samples, 0.07%)</title><rect x="81.6103%" y="453" width="0.0738%" height="15" fill="rgb(229,198,43)" fg:x="16593" fg:w="15"/><text x="81.8603%" y="463.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _updateAutoShowVisibility:immediateChanges:] (15 samples, 0.07%)</title><rect x="81.6103%" y="437" width="0.0738%" height="15" fill="rgb(206,209,35)" fg:x="16593" fg:w="15"/><text x="81.8603%" y="447.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isMouseInMenuBarHotRegion:makeVisibleBoundsPtr:keepVisibleBoundsPtr:displayPtr:] (10 samples, 0.05%)</title><rect x="81.6349%" y="421" width="0.0492%" height="15" fill="rgb(245,195,53)" fg:x="16598" fg:w="10"/><text x="81.8849%" y="431.50"></text></g><g><title>AppKit`_NSSendEventToDequeuingObservers (16 samples, 0.08%)</title><rect x="81.6103%" y="517" width="0.0787%" height="15" fill="rgb(240,92,26)" fg:x="16593" fg:w="16"/><text x="81.8603%" y="527.50"></text></g><g><title>AppKit`__57-[NSMenuBarTrackingSession _addLocalEventMonitorIfNeeded]_block_invoke (16 samples, 0.08%)</title><rect x="81.6103%" y="501" width="0.0787%" height="15" fill="rgb(207,40,23)" fg:x="16593" fg:w="16"/><text x="81.8603%" y="511.50"></text></g><g><title>AppKit`-[NSMenuBarTrackingSession handleEvent:] (16 samples, 0.08%)</title><rect x="81.6103%" y="485" width="0.0787%" height="15" fill="rgb(223,111,35)" fg:x="16593" fg:w="16"/><text x="81.8603%" y="495.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _autoShowHideObserverWithEvent:] (16 samples, 0.08%)</title><rect x="81.6103%" y="469" width="0.0787%" height="15" fill="rgb(229,147,28)" fg:x="16593" fg:w="16"/><text x="81.8603%" y="479.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (16,162 samples, 79.49%)</title><rect x="2.2083%" y="533" width="79.4905%" height="15" fill="rgb(211,29,28)" fg:x="449" fg:w="16162"/><text x="2.4583%" y="543.50">AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:]</text></g><g><title>AppKit`-[NSApplication run] (16,196 samples, 79.66%)</title><rect x="2.0559%" y="549" width="79.6577%" height="15" fill="rgb(228,72,33)" fg:x="418" fg:w="16196"/><text x="2.3059%" y="559.50">AppKit`-[NSApplication run]</text></g><g><title>tiny_voxel`tiny_voxel::run::_{{closure}} (16,382 samples, 80.57%)</title><rect x="1.1460%" y="597" width="80.5725%" height="15" fill="rgb(205,214,31)" fg:x="233" fg:w="16382"/><text x="1.3960%" y="607.50">tiny_voxel`tiny_voxel::run::_{{closure}}</text></g><g><title>tiny_voxel`winit::window::Window::set_cursor_grab (16,197 samples, 79.66%)</title><rect x="2.0559%" y="581" width="79.6626%" height="15" fill="rgb(224,111,15)" fg:x="418" fg:w="16197"/><text x="2.3059%" y="591.50">tiny_voxel`winit::window::Window::set_cursor_grab</text></g><g><title>tiny_voxel`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (16,197 samples, 79.66%)</title><rect x="2.0559%" y="565" width="79.6626%" height="15" fill="rgb(253,21,26)" fg:x="418" fg:w="16197"/><text x="2.3059%" y="575.50">tiny_voxel`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>dyld`start (16,388 samples, 80.60%)</title><rect x="1.1214%" y="709" width="80.6020%" height="15" fill="rgb(245,139,43)" fg:x="228" fg:w="16388"/><text x="1.3714%" y="719.50">dyld`start</text></g><g><title>tiny_voxel`main (16,388 samples, 80.60%)</title><rect x="1.1214%" y="693" width="80.6020%" height="15" fill="rgb(252,170,7)" fg:x="228" fg:w="16388"/><text x="1.3714%" y="703.50">tiny_voxel`main</text></g><g><title>tiny_voxel`std::rt::lang_start_internal (16,388 samples, 80.60%)</title><rect x="1.1214%" y="677" width="80.6020%" height="15" fill="rgb(231,118,14)" fg:x="228" fg:w="16388"/><text x="1.3714%" y="687.50">tiny_voxel`std::rt::lang_start_internal</text></g><g><title>tiny_voxel`std::rt::lang_start::_{{closure}} (16,388 samples, 80.60%)</title><rect x="1.1214%" y="661" width="80.6020%" height="15" fill="rgb(238,83,0)" fg:x="228" fg:w="16388"/><text x="1.3714%" y="671.50">tiny_voxel`std::rt::lang_start::_{{closure}}</text></g><g><title>tiny_voxel`std::sys_common::backtrace::__rust_begin_short_backtrace (16,388 samples, 80.60%)</title><rect x="1.1214%" y="645" width="80.6020%" height="15" fill="rgb(221,39,39)" fg:x="228" fg:w="16388"/><text x="1.3714%" y="655.50">tiny_voxel`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tiny_voxel`main (16,388 samples, 80.60%)</title><rect x="1.1214%" y="629" width="80.6020%" height="15" fill="rgb(222,119,46)" fg:x="228" fg:w="16388"/><text x="1.3714%" y="639.50">tiny_voxel`main</text></g><g><title>tiny_voxel`pollster::block_on (16,388 samples, 80.60%)</title><rect x="1.1214%" y="613" width="80.6020%" height="15" fill="rgb(222,165,49)" fg:x="228" fg:w="16388"/><text x="1.3714%" y="623.50">tiny_voxel`pollster::block_on</text></g><g><title>libsystem_kernel.dylib`__exit (9 samples, 0.04%)</title><rect x="81.7234%" y="709" width="0.0443%" height="15" fill="rgb(219,113,52)" fg:x="16616" fg:w="9"/><text x="81.9734%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (39 samples, 0.19%)</title><rect x="81.7726%" y="693" width="0.1918%" height="15" fill="rgb(214,7,15)" fg:x="16626" fg:w="39"/><text x="82.0226%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (3 samples, 0.01%)</title><rect x="81.9791%" y="661" width="0.0148%" height="15" fill="rgb(235,32,4)" fg:x="16668" fg:w="3"/><text x="82.2291%" y="671.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (5 samples, 0.02%)</title><rect x="81.9988%" y="597" width="0.0246%" height="15" fill="rgb(238,90,54)" fg:x="16672" fg:w="5"/><text x="82.2488%" y="607.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, void*) (5 samples, 0.02%)</title><rect x="81.9988%" y="581" width="0.0246%" height="15" fill="rgb(213,208,19)" fg:x="16672" fg:w="5"/><text x="82.2488%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (8 samples, 0.04%)</title><rect x="81.9939%" y="613" width="0.0393%" height="15" fill="rgb(233,156,4)" fg:x="16671" fg:w="8"/><text x="82.2439%" y="623.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (7 samples, 0.03%)</title><rect x="82.0529%" y="421" width="0.0344%" height="15" fill="rgb(207,194,5)" fg:x="16683" fg:w="7"/><text x="82.3029%" y="431.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (6 samples, 0.03%)</title><rect x="82.0578%" y="405" width="0.0295%" height="15" fill="rgb(206,111,30)" fg:x="16684" fg:w="6"/><text x="82.3078%" y="415.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (5 samples, 0.02%)</title><rect x="82.0628%" y="389" width="0.0246%" height="15" fill="rgb(243,70,54)" fg:x="16685" fg:w="5"/><text x="82.3128%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.02%)</title><rect x="82.0628%" y="373" width="0.0246%" height="15" fill="rgb(242,28,8)" fg:x="16685" fg:w="5"/><text x="82.3128%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.02%)</title><rect x="82.0628%" y="357" width="0.0246%" height="15" fill="rgb(219,106,18)" fg:x="16685" fg:w="5"/><text x="82.3128%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.02%)</title><rect x="82.0628%" y="341" width="0.0246%" height="15" fill="rgb(244,222,10)" fg:x="16685" fg:w="5"/><text x="82.3128%" y="351.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (10 samples, 0.05%)</title><rect x="82.0431%" y="453" width="0.0492%" height="15" fill="rgb(236,179,52)" fg:x="16681" fg:w="10"/><text x="82.2931%" y="463.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (8 samples, 0.04%)</title><rect x="82.0529%" y="437" width="0.0393%" height="15" fill="rgb(213,23,39)" fg:x="16683" fg:w="8"/><text x="82.3029%" y="447.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (11 samples, 0.05%)</title><rect x="82.0431%" y="485" width="0.0541%" height="15" fill="rgb(238,48,10)" fg:x="16681" fg:w="11"/><text x="82.2931%" y="495.50"></text></g><g><title>Metal`MTLDispatchListApply (11 samples, 0.05%)</title><rect x="82.0431%" y="469" width="0.0541%" height="15" fill="rgb(251,196,23)" fg:x="16681" fg:w="11"/><text x="82.2931%" y="479.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseCurrentResources (15 samples, 0.07%)</title><rect x="82.1119%" y="421" width="0.0738%" height="15" fill="rgb(250,152,24)" fg:x="16695" fg:w="15"/><text x="82.3619%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (8 samples, 0.04%)</title><rect x="82.1464%" y="405" width="0.0393%" height="15" fill="rgb(209,150,17)" fg:x="16702" fg:w="8"/><text x="82.3964%" y="415.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseExtraResources (6 samples, 0.03%)</title><rect x="82.1857%" y="421" width="0.0295%" height="15" fill="rgb(234,202,34)" fg:x="16710" fg:w="6"/><text x="82.4357%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (5 samples, 0.02%)</title><rect x="82.1906%" y="405" width="0.0246%" height="15" fill="rgb(253,148,53)" fg:x="16711" fg:w="5"/><text x="82.4406%" y="415.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (34 samples, 0.17%)</title><rect x="82.1070%" y="437" width="0.1672%" height="15" fill="rgb(218,129,16)" fg:x="16694" fg:w="34"/><text x="82.3570%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (9 samples, 0.04%)</title><rect x="82.2300%" y="421" width="0.0443%" height="15" fill="rgb(216,85,19)" fg:x="16719" fg:w="9"/><text x="82.4800%" y="431.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (36 samples, 0.18%)</title><rect x="82.1070%" y="453" width="0.1771%" height="15" fill="rgb(235,228,7)" fg:x="16694" fg:w="36"/><text x="82.3570%" y="463.50"></text></g><g><title>IOGPU`IOGPUResourceListDestroy (5 samples, 0.02%)</title><rect x="82.2841%" y="437" width="0.0246%" height="15" fill="rgb(245,175,0)" fg:x="16730" fg:w="5"/><text x="82.5341%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_medium (5 samples, 0.02%)</title><rect x="82.2841%" y="421" width="0.0246%" height="15" fill="rgb(208,168,36)" fg:x="16730" fg:w="5"/><text x="82.5341%" y="431.50"></text></g><g><title>libsystem_kernel.dylib`madvise (5 samples, 0.02%)</title><rect x="82.2841%" y="405" width="0.0246%" height="15" fill="rgb(246,171,24)" fg:x="16730" fg:w="5"/><text x="82.5341%" y="415.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (43 samples, 0.21%)</title><rect x="82.1070%" y="469" width="0.2115%" height="15" fill="rgb(215,142,24)" fg:x="16694" fg:w="43"/><text x="82.3570%" y="479.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageFree (7 samples, 0.03%)</title><rect x="82.2841%" y="453" width="0.0344%" height="15" fill="rgb(250,187,7)" fg:x="16730" fg:w="7"/><text x="82.5341%" y="463.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (49 samples, 0.24%)</title><rect x="82.0972%" y="485" width="0.2410%" height="15" fill="rgb(228,66,33)" fg:x="16692" fg:w="49"/><text x="82.3472%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (64 samples, 0.31%)</title><rect x="82.0332%" y="613" width="0.3148%" height="15" fill="rgb(234,215,21)" fg:x="16679" fg:w="64"/><text x="82.2832%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (63 samples, 0.31%)</title><rect x="82.0382%" y="597" width="0.3099%" height="15" fill="rgb(222,191,20)" fg:x="16680" fg:w="63"/><text x="82.2882%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (63 samples, 0.31%)</title><rect x="82.0382%" y="581" width="0.3099%" height="15" fill="rgb(245,79,54)" fg:x="16680" fg:w="63"/><text x="82.2882%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (63 samples, 0.31%)</title><rect x="82.0382%" y="565" width="0.3099%" height="15" fill="rgb(240,10,37)" fg:x="16680" fg:w="63"/><text x="82.2882%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (62 samples, 0.30%)</title><rect x="82.0431%" y="549" width="0.3049%" height="15" fill="rgb(214,192,32)" fg:x="16681" fg:w="62"/><text x="82.2931%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (62 samples, 0.30%)</title><rect x="82.0431%" y="533" width="0.3049%" height="15" fill="rgb(209,36,54)" fg:x="16681" fg:w="62"/><text x="82.2931%" y="543.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (62 samples, 0.30%)</title><rect x="82.0431%" y="517" width="0.3049%" height="15" fill="rgb(220,10,11)" fg:x="16681" fg:w="62"/><text x="82.2931%" y="527.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (62 samples, 0.30%)</title><rect x="82.0431%" y="501" width="0.3049%" height="15" fill="rgb(221,106,17)" fg:x="16681" fg:w="62"/><text x="82.2931%" y="511.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice periodicUpdateResourcePoolPurgeability] (3 samples, 0.01%)</title><rect x="82.3529%" y="549" width="0.0148%" height="15" fill="rgb(251,142,44)" fg:x="16744" fg:w="3"/><text x="82.6029%" y="559.50"></text></g><g><title>IOGPU`-[IOGPUMetalResourcePool updateResourcePurgeability] (3 samples, 0.01%)</title><rect x="82.3529%" y="533" width="0.0148%" height="15" fill="rgb(238,13,15)" fg:x="16744" fg:w="3"/><text x="82.6029%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource setPurgeableState:] (3 samples, 0.01%)</title><rect x="82.3529%" y="517" width="0.0148%" height="15" fill="rgb(208,107,27)" fg:x="16744" fg:w="3"/><text x="82.6029%" y="527.50"></text></g><g><title>IOKit`iokit_user_client_trap (3 samples, 0.01%)</title><rect x="82.3529%" y="501" width="0.0148%" height="15" fill="rgb(205,136,37)" fg:x="16744" fg:w="3"/><text x="82.6029%" y="511.50"></text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (1,518 samples, 7.47%)</title><rect x="82.3874%" y="501" width="7.4661%" height="15" fill="rgb(250,205,27)" fg:x="16751" fg:w="1518"/><text x="82.6374%" y="511.50">IOGPU`IOGP..</text></g><g><title>IOKit`IOConnectCallMethod (1,518 samples, 7.47%)</title><rect x="82.3874%" y="485" width="7.4661%" height="15" fill="rgb(210,80,43)" fg:x="16751" fg:w="1518"/><text x="82.6374%" y="495.50">IOKit`IOCo..</text></g><g><title>IOKit`io_connect_method (1,518 samples, 7.47%)</title><rect x="82.3874%" y="469" width="7.4661%" height="15" fill="rgb(247,160,36)" fg:x="16751" fg:w="1518"/><text x="82.6374%" y="479.50">IOKit`io_c..</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,518 samples, 7.47%)</title><rect x="82.3874%" y="453" width="7.4661%" height="15" fill="rgb(234,13,49)" fg:x="16751" fg:w="1518"/><text x="82.6374%" y="463.50">libsystem_..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (1,542 samples, 7.58%)</title><rect x="82.3775%" y="517" width="7.5841%" height="15" fill="rgb(234,122,0)" fg:x="16749" fg:w="1542"/><text x="82.6275%" y="527.50">IOGPU`-[IO..</text></g><g><title>IOKit`iokit_user_client_trap (22 samples, 0.11%)</title><rect x="89.8534%" y="501" width="0.1082%" height="15" fill="rgb(207,146,38)" fg:x="18269" fg:w="22"/><text x="90.1034%" y="511.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (1,546 samples, 7.60%)</title><rect x="82.3677%" y="549" width="7.6038%" height="15" fill="rgb(207,177,25)" fg:x="16747" fg:w="1546"/><text x="82.6177%" y="559.50">Metal`-[_M..</text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (1,544 samples, 7.59%)</title><rect x="82.3775%" y="533" width="7.5939%" height="15" fill="rgb(211,178,42)" fg:x="16749" fg:w="1544"/><text x="82.6275%" y="543.50">IOGPU`-[IO..</text></g><g><title>QuartzCore`_XImageQueueDidComposite (4 samples, 0.02%)</title><rect x="89.9813%" y="517" width="0.0197%" height="15" fill="rgb(230,69,54)" fg:x="18295" fg:w="4"/><text x="90.2313%" y="527.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (4 samples, 0.02%)</title><rect x="89.9813%" y="501" width="0.0197%" height="15" fill="rgb(214,135,41)" fg:x="18295" fg:w="4"/><text x="90.2313%" y="511.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (3 samples, 0.01%)</title><rect x="89.9862%" y="485" width="0.0148%" height="15" fill="rgb(237,67,25)" fg:x="18296" fg:w="3"/><text x="90.2362%" y="495.50"></text></g><g><title>QuartzCore`CARenderClient_server (7 samples, 0.03%)</title><rect x="89.9715%" y="533" width="0.0344%" height="15" fill="rgb(222,189,50)" fg:x="18293" fg:w="7"/><text x="90.2215%" y="543.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Context::client_port (11 samples, 0.05%)</title><rect x="89.9715%" y="549" width="0.0541%" height="15" fill="rgb(245,148,34)" fg:x="18293" fg:w="11"/><text x="90.2215%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (4 samples, 0.02%)</title><rect x="90.0059%" y="533" width="0.0197%" height="15" fill="rgb(222,29,6)" fg:x="18300" fg:w="4"/><text x="90.2559%" y="543.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (4 samples, 0.02%)</title><rect x="90.0059%" y="517" width="0.0197%" height="15" fill="rgb(221,189,43)" fg:x="18300" fg:w="4"/><text x="90.2559%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (4 samples, 0.02%)</title><rect x="90.0059%" y="501" width="0.0197%" height="15" fill="rgb(207,36,27)" fg:x="18300" fg:w="4"/><text x="90.2559%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (1,634 samples, 8.04%)</title><rect x="81.9939%" y="629" width="8.0366%" height="15" fill="rgb(217,90,24)" fg:x="16671" fg:w="1634"/><text x="82.2439%" y="639.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (1,562 samples, 7.68%)</title><rect x="82.3480%" y="613" width="7.6825%" height="15" fill="rgb(224,66,35)" fg:x="16743" fg:w="1562"/><text x="82.5980%" y="623.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (1,562 samples, 7.68%)</title><rect x="82.3480%" y="597" width="7.6825%" height="15" fill="rgb(221,13,50)" fg:x="16743" fg:w="1562"/><text x="82.5980%" y="607.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (1,561 samples, 7.68%)</title><rect x="82.3529%" y="581" width="7.6776%" height="15" fill="rgb(236,68,49)" fg:x="16744" fg:w="1561"/><text x="82.6029%" y="591.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout (1,561 samples, 7.68%)</title><rect x="82.3529%" y="565" width="7.6776%" height="15" fill="rgb(229,146,28)" fg:x="16744" fg:w="1561"/><text x="82.6029%" y="575.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (1,639 samples, 8.06%)</title><rect x="81.9742%" y="677" width="8.0612%" height="15" fill="rgb(225,31,38)" fg:x="16667" fg:w="1639"/><text x="82.2242%" y="687.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (1,635 samples, 8.04%)</title><rect x="81.9939%" y="661" width="8.0415%" height="15" fill="rgb(250,208,3)" fg:x="16671" fg:w="1635"/><text x="82.2439%" y="671.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (1,635 samples, 8.04%)</title><rect x="81.9939%" y="645" width="8.0415%" height="15" fill="rgb(246,54,23)" fg:x="16671" fg:w="1635"/><text x="82.2439%" y="655.50">libdispatch..</text></g><g><title>libsystem_pthread.dylib`start_wqthread (1,682 samples, 8.27%)</title><rect x="81.7677%" y="709" width="8.2727%" height="15" fill="rgb(243,76,11)" fg:x="16625" fg:w="1682"/><text x="82.0177%" y="719.50">libsystem_pt..</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (1,642 samples, 8.08%)</title><rect x="81.9644%" y="693" width="8.0759%" height="15" fill="rgb(245,21,50)" fg:x="16665" fg:w="1642"/><text x="82.2144%" y="703.50">libsystem_p..</text></g><g><title>SkyLight`CGSEventLogEvent (3 samples, 0.01%)</title><rect x="90.0748%" y="517" width="0.0148%" height="15" fill="rgb(228,9,43)" fg:x="18314" fg:w="3"/><text x="90.3248%" y="527.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (5 samples, 0.02%)</title><rect x="90.0895%" y="501" width="0.0246%" height="15" fill="rgb(208,100,47)" fg:x="18317" fg:w="5"/><text x="90.3395%" y="511.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (5 samples, 0.02%)</title><rect x="90.0895%" y="485" width="0.0246%" height="15" fill="rgb(232,26,8)" fg:x="18317" fg:w="5"/><text x="90.3395%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (5 samples, 0.02%)</title><rect x="90.0895%" y="469" width="0.0246%" height="15" fill="rgb(216,166,38)" fg:x="18317" fg:w="5"/><text x="90.3395%" y="479.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (17 samples, 0.08%)</title><rect x="90.0895%" y="517" width="0.0836%" height="15" fill="rgb(251,202,51)" fg:x="18317" fg:w="17"/><text x="90.3395%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (11 samples, 0.05%)</title><rect x="90.1190%" y="501" width="0.0541%" height="15" fill="rgb(254,216,34)" fg:x="18323" fg:w="11"/><text x="90.3690%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (11 samples, 0.05%)</title><rect x="90.1190%" y="485" width="0.0541%" height="15" fill="rgb(251,32,27)" fg:x="18323" fg:w="11"/><text x="90.3690%" y="495.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (11 samples, 0.05%)</title><rect x="90.1190%" y="469" width="0.0541%" height="15" fill="rgb(208,127,28)" fg:x="18323" fg:w="11"/><text x="90.3690%" y="479.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (27 samples, 0.13%)</title><rect x="90.0452%" y="629" width="0.1328%" height="15" fill="rgb(224,137,22)" fg:x="18308" fg:w="27"/><text x="90.2952%" y="639.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (27 samples, 0.13%)</title><rect x="90.0452%" y="613" width="0.1328%" height="15" fill="rgb(254,70,32)" fg:x="18308" fg:w="27"/><text x="90.2952%" y="623.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (27 samples, 0.13%)</title><rect x="90.0452%" y="597" width="0.1328%" height="15" fill="rgb(229,75,37)" fg:x="18308" fg:w="27"/><text x="90.2952%" y="607.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (27 samples, 0.13%)</title><rect x="90.0452%" y="581" width="0.1328%" height="15" fill="rgb(252,64,23)" fg:x="18308" fg:w="27"/><text x="90.2952%" y="591.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (27 samples, 0.13%)</title><rect x="90.0452%" y="565" width="0.1328%" height="15" fill="rgb(232,162,48)" fg:x="18308" fg:w="27"/><text x="90.2952%" y="575.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (22 samples, 0.11%)</title><rect x="90.0698%" y="549" width="0.1082%" height="15" fill="rgb(246,160,12)" fg:x="18313" fg:w="22"/><text x="90.3198%" y="559.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (22 samples, 0.11%)</title><rect x="90.0698%" y="533" width="0.1082%" height="15" fill="rgb(247,166,0)" fg:x="18313" fg:w="22"/><text x="90.3198%" y="543.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (6 samples, 0.03%)</title><rect x="90.1780%" y="629" width="0.0295%" height="15" fill="rgb(249,219,21)" fg:x="18335" fg:w="6"/><text x="90.4280%" y="639.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (3 samples, 0.01%)</title><rect x="90.1928%" y="613" width="0.0148%" height="15" fill="rgb(205,209,3)" fg:x="18338" fg:w="3"/><text x="90.4428%" y="623.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (3 samples, 0.01%)</title><rect x="90.1928%" y="597" width="0.0148%" height="15" fill="rgb(243,44,1)" fg:x="18338" fg:w="3"/><text x="90.4428%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (3 samples, 0.01%)</title><rect x="90.1928%" y="581" width="0.0148%" height="15" fill="rgb(206,159,16)" fg:x="18338" fg:w="3"/><text x="90.4428%" y="591.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (35 samples, 0.17%)</title><rect x="90.0403%" y="645" width="0.1721%" height="15" fill="rgb(244,77,30)" fg:x="18307" fg:w="35"/><text x="90.2903%" y="655.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (36 samples, 0.18%)</title><rect x="90.0403%" y="661" width="0.1771%" height="15" fill="rgb(218,69,12)" fg:x="18307" fg:w="36"/><text x="90.2903%" y="671.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (37 samples, 0.18%)</title><rect x="90.0403%" y="709" width="0.1820%" height="15" fill="rgb(212,87,7)" fg:x="18307" fg:w="37"/><text x="90.2903%" y="719.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (37 samples, 0.18%)</title><rect x="90.0403%" y="693" width="0.1820%" height="15" fill="rgb(245,114,25)" fg:x="18307" fg:w="37"/><text x="90.2903%" y="703.50"></text></g><g><title>AppKit`_NSEventThread (37 samples, 0.18%)</title><rect x="90.0403%" y="677" width="0.1820%" height="15" fill="rgb(210,61,42)" fg:x="18307" fg:w="37"/><text x="90.2903%" y="687.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (7 samples, 0.03%)</title><rect x="90.2223%" y="645" width="0.0344%" height="15" fill="rgb(211,52,33)" fg:x="18344" fg:w="7"/><text x="90.4723%" y="655.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (8 samples, 0.04%)</title><rect x="90.2223%" y="661" width="0.0393%" height="15" fill="rgb(234,58,33)" fg:x="18344" fg:w="8"/><text x="90.4723%" y="671.50"></text></g><g><title>tiny_voxel`tiny_voxel::State::render (11 samples, 0.05%)</title><rect x="90.2223%" y="677" width="0.0541%" height="15" fill="rgb(220,115,36)" fg:x="18344" fg:w="11"/><text x="90.4723%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (25 samples, 0.12%)</title><rect x="90.3158%" y="661" width="0.1230%" height="15" fill="rgb(243,153,54)" fg:x="18363" fg:w="25"/><text x="90.5658%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (16 samples, 0.08%)</title><rect x="90.4387%" y="661" width="0.0787%" height="15" fill="rgb(251,47,18)" fg:x="18388" fg:w="16"/><text x="90.6887%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free (43 samples, 0.21%)</title><rect x="90.5174%" y="661" width="0.2115%" height="15" fill="rgb(242,102,42)" fg:x="18404" fg:w="43"/><text x="90.7674%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (77 samples, 0.38%)</title><rect x="90.7289%" y="661" width="0.3787%" height="15" fill="rgb(234,31,38)" fg:x="18447" fg:w="77"/><text x="90.9789%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.05%)</title><rect x="91.1125%" y="661" width="0.0541%" height="15" fill="rgb(221,117,51)" fg:x="18525" fg:w="11"/><text x="91.3625%" y="671.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (15 samples, 0.07%)</title><rect x="91.1666%" y="661" width="0.0738%" height="15" fill="rgb(212,20,18)" fg:x="18536" fg:w="15"/><text x="91.4166%" y="671.50"></text></g><g><title>tiny_voxel`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,2_usize&gt;&gt;::get (36 samples, 0.18%)</title><rect x="91.2404%" y="661" width="0.1771%" height="15" fill="rgb(245,133,36)" fg:x="18551" fg:w="36"/><text x="91.4904%" y="671.50"></text></g><g><title>tiny_voxel`&lt;noise::noise_fns::generators::perlin::Perlin as noise::noise_fns::NoiseFn&lt;f64,3_usize&gt;&gt;::get (722 samples, 3.55%)</title><rect x="91.4175%" y="661" width="3.5511%" height="15" fill="rgb(212,6,19)" fg:x="18587" fg:w="722"/><text x="91.6675%" y="671.50">tiny..</text></g><g><title>tiny_voxel`&lt;rand_chacha::chacha::ChaCha12Core as rand_core::block::BlockRngCore&gt;::generate (12 samples, 0.06%)</title><rect x="94.9685%" y="661" width="0.0590%" height="15" fill="rgb(218,1,36)" fg:x="19309" fg:w="12"/><text x="95.2185%" y="671.50"></text></g><g><title>tiny_voxel`DYLD-STUB$$free (15 samples, 0.07%)</title><rect x="95.0275%" y="661" width="0.0738%" height="15" fill="rgb(246,84,54)" fg:x="19321" fg:w="15"/><text x="95.2775%" y="671.50"></text></g><g><title>tiny_voxel`DYLD-STUB$$malloc (5 samples, 0.02%)</title><rect x="95.1013%" y="661" width="0.0246%" height="15" fill="rgb(242,110,6)" fg:x="19336" fg:w="5"/><text x="95.3513%" y="671.50"></text></g><g><title>tiny_voxel`__rdl_alloc (13 samples, 0.06%)</title><rect x="95.1259%" y="661" width="0.0639%" height="15" fill="rgb(214,47,5)" fg:x="19341" fg:w="13"/><text x="95.3759%" y="671.50"></text></g><g><title>tiny_voxel`__rust_alloc (7 samples, 0.03%)</title><rect x="95.1898%" y="661" width="0.0344%" height="15" fill="rgb(218,159,25)" fg:x="19354" fg:w="7"/><text x="95.4398%" y="671.50"></text></g><g><title>tiny_voxel`tiny_voxel::block::Chunk::create_mesh (9 samples, 0.04%)</title><rect x="95.2341%" y="661" width="0.0443%" height="15" fill="rgb(215,211,28)" fg:x="19363" fg:w="9"/><text x="95.4841%" y="671.50"></text></g><g><title>tiny_voxel`tiny_voxel::block::get_solid (4 samples, 0.02%)</title><rect x="95.2587%" y="645" width="0.0197%" height="15" fill="rgb(238,59,32)" fg:x="19368" fg:w="4"/><text x="95.5087%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (93 samples, 0.46%)</title><rect x="96.6703%" y="645" width="0.4574%" height="15" fill="rgb(226,82,3)" fg:x="19655" fg:w="93"/><text x="96.9203%" y="655.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.03%)</title><rect x="97.1326%" y="645" width="0.0295%" height="15" fill="rgb(240,164,32)" fg:x="19749" fg:w="6"/><text x="97.3826%" y="655.50"></text></g><g><title>libsystem_platform.dylib`__bzero (35 samples, 0.17%)</title><rect x="97.1670%" y="613" width="0.1721%" height="15" fill="rgb(232,46,7)" fg:x="19756" fg:w="35"/><text x="97.4170%" y="623.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.01%)</title><rect x="97.3392%" y="613" width="0.0148%" height="15" fill="rgb(229,129,53)" fg:x="19791" fg:w="3"/><text x="97.5892%" y="623.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (12 samples, 0.06%)</title><rect x="97.3638%" y="501" width="0.0590%" height="15" fill="rgb(234,188,29)" fg:x="19796" fg:w="12"/><text x="97.6138%" y="511.50"></text></g><g><title>IOKit`IOConnectCallMethod (12 samples, 0.06%)</title><rect x="97.3638%" y="485" width="0.0590%" height="15" fill="rgb(246,141,4)" fg:x="19796" fg:w="12"/><text x="97.6138%" y="495.50"></text></g><g><title>IOKit`io_connect_method (12 samples, 0.06%)</title><rect x="97.3638%" y="469" width="0.0590%" height="15" fill="rgb(229,23,39)" fg:x="19796" fg:w="12"/><text x="97.6138%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (12 samples, 0.06%)</title><rect x="97.3638%" y="453" width="0.0590%" height="15" fill="rgb(206,12,3)" fg:x="19796" fg:w="12"/><text x="97.6138%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithDevice:pointer:length:alignment:options:sysMemSize:gpuAddress:args:argsSize:deallocator:] (13 samples, 0.06%)</title><rect x="97.3638%" y="533" width="0.0639%" height="15" fill="rgb(252,226,20)" fg:x="19796" fg:w="13"/><text x="97.6138%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (13 samples, 0.06%)</title><rect x="97.3638%" y="517" width="0.0639%" height="15" fill="rgb(216,123,35)" fg:x="19796" fg:w="13"/><text x="97.6138%" y="527.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (14 samples, 0.07%)</title><rect x="97.4277%" y="501" width="0.0689%" height="15" fill="rgb(212,68,40)" fg:x="19809" fg:w="14"/><text x="97.6777%" y="511.50"></text></g><g><title>IOKit`IOConnectCallMethod (14 samples, 0.07%)</title><rect x="97.4277%" y="485" width="0.0689%" height="15" fill="rgb(254,125,32)" fg:x="19809" fg:w="14"/><text x="97.6777%" y="495.50"></text></g><g><title>IOKit`io_connect_method (14 samples, 0.07%)</title><rect x="97.4277%" y="469" width="0.0689%" height="15" fill="rgb(253,97,22)" fg:x="19809" fg:w="14"/><text x="97.6777%" y="479.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (14 samples, 0.07%)</title><rect x="97.4277%" y="453" width="0.0689%" height="15" fill="rgb(241,101,14)" fg:x="19809" fg:w="14"/><text x="97.6777%" y="463.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:] (15 samples, 0.07%)</title><rect x="97.4277%" y="533" width="0.0738%" height="15" fill="rgb(238,103,29)" fg:x="19809" fg:w="15"/><text x="97.6777%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (15 samples, 0.07%)</title><rect x="97.4277%" y="517" width="0.0738%" height="15" fill="rgb(233,195,47)" fg:x="19809" fg:w="15"/><text x="97.6777%" y="527.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (29 samples, 0.14%)</title><rect x="97.3638%" y="565" width="0.1426%" height="15" fill="rgb(246,218,30)" fg:x="19796" fg:w="29"/><text x="97.6138%" y="575.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (29 samples, 0.14%)</title><rect x="97.3638%" y="549" width="0.1426%" height="15" fill="rgb(219,145,47)" fg:x="19796" fg:w="29"/><text x="97.6138%" y="559.50"></text></g><g><title>tiny_voxel`wgpu_core::device::Device&lt;A&gt;::create_buffer (32 samples, 0.16%)</title><rect x="97.3588%" y="597" width="0.1574%" height="15" fill="rgb(243,12,26)" fg:x="19795" fg:w="32"/><text x="97.6088%" y="607.50"></text></g><g><title>tiny_voxel`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device&lt;wgpu_hal::metal::Api&gt; for wgpu_hal::metal::Device&gt;::create_buffer (31 samples, 0.15%)</title><rect x="97.3638%" y="581" width="0.1525%" height="15" fill="rgb(214,87,16)" fg:x="19796" fg:w="31"/><text x="97.6138%" y="591.50"></text></g><g><title>tiny_voxel`&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (73 samples, 0.36%)</title><rect x="97.1621%" y="645" width="0.3590%" height="15" fill="rgb(208,99,42)" fg:x="19755" fg:w="73"/><text x="97.4121%" y="655.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (72 samples, 0.35%)</title><rect x="97.1670%" y="629" width="0.3541%" height="15" fill="rgb(253,99,2)" fg:x="19756" fg:w="72"/><text x="97.4170%" y="639.50"></text></g><g><title>tiny_voxel`wgpu_core::device::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (34 samples, 0.17%)</title><rect x="97.3539%" y="613" width="0.1672%" height="15" fill="rgb(220,168,23)" fg:x="19794" fg:w="34"/><text x="97.6039%" y="623.50"></text></g><g><title>tiny_voxel`&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.08%)</title><rect x="98.5540%" y="629" width="0.0787%" height="15" fill="rgb(242,38,24)" fg:x="20038" fg:w="16"/><text x="98.8040%" y="639.50"></text></g><g><title>tiny_voxel`tiny_voxel::block::Chunk::new (688 samples, 3.38%)</title><rect x="95.2784%" y="661" width="3.3838%" height="15" fill="rgb(225,182,9)" fg:x="19372" fg:w="688"/><text x="95.5284%" y="671.50">tin..</text></g><g><title>tiny_voxel`tiny_voxel::block::get_solid (229 samples, 1.13%)</title><rect x="97.5359%" y="645" width="1.1263%" height="15" fill="rgb(243,178,37)" fg:x="19831" fg:w="229"/><text x="97.7859%" y="655.50"></text></g><g><title>tiny_voxel`core::hash::BuildHasher::hash_one (6 samples, 0.03%)</title><rect x="98.6327%" y="629" width="0.0295%" height="15" fill="rgb(232,139,19)" fg:x="20054" fg:w="6"/><text x="98.8827%" y="639.50"></text></g><g><title>tiny_voxel`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (1,965 samples, 9.66%)</title><rect x="90.2223%" y="709" width="9.6646%" height="15" fill="rgb(225,201,24)" fg:x="18344" fg:w="1965"/><text x="90.4723%" y="719.50">tiny_voxel`&lt;wi..</text></g><g><title>tiny_voxel`tiny_voxel::run::_{{closure}}::_{{closure}} (1,965 samples, 9.66%)</title><rect x="90.2223%" y="693" width="9.6646%" height="15" fill="rgb(221,47,46)" fg:x="18344" fg:w="1965"/><text x="90.4723%" y="703.50">tiny_voxel`tin..</text></g><g><title>tiny_voxel`tiny_voxel::State::update (1,954 samples, 9.61%)</title><rect x="90.2764%" y="677" width="9.6105%" height="15" fill="rgb(249,23,13)" fg:x="18355" fg:w="1954"/><text x="90.5264%" y="687.50">tiny_voxel`tin..</text></g><g><title>tiny_voxel`tiny_voxel::block::get_solid (249 samples, 1.22%)</title><rect x="98.6622%" y="661" width="1.2247%" height="15" fill="rgb(219,9,5)" fg:x="20060" fg:w="249"/><text x="98.9122%" y="671.50"></text></g><g><title>tiny_voxel`wgpu_core::command::render::_&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (4 samples, 0.02%)</title><rect x="99.8918%" y="373" width="0.0197%" height="15" fill="rgb(254,171,16)" fg:x="20310" fg:w="4"/><text x="100.1418%" y="383.50"></text></g><g><title>AGXMetalG15G_C0`-[AGXG15GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (3 samples, 0.01%)</title><rect x="99.8967%" y="357" width="0.0148%" height="15" fill="rgb(230,171,20)" fg:x="20311" fg:w="3"/><text x="100.1467%" y="367.50"></text></g><g><title>AGXMetalG15G_C0`AGX::RenderContext&lt;AGX::G15::Encoders, AGX::G15::Classes, AGX::G15::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G15::VertexProgramVariant const*, AGX::G15::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G15::Encoders, AGX::G15::Classes&gt;&amp;, AGX::RenderDirtyBits (3 samples, 0.01%)</title><rect x="99.8967%" y="341" width="0.0148%" height="15" fill="rgb(210,71,41)" fg:x="20311" fg:w="3"/><text x="100.1467%" y="351.50"></text></g><g><title>tiny_voxel`&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (5 samples, 0.02%)</title><rect x="99.8918%" y="389" width="0.0246%" height="15" fill="rgb(206,173,20)" fg:x="20310" fg:w="5"/><text x="100.1418%" y="399.50"></text></g><g><title>tiny_voxel`tiny_voxel::State::render (8 samples, 0.04%)</title><rect x="99.8918%" y="405" width="0.0393%" height="15" fill="rgb(233,88,34)" fg:x="20310" fg:w="8"/><text x="100.1418%" y="415.50"></text></g><g><title>all (20,332 samples, 100%)</title><rect x="0.0000%" y="725" width="100.0000%" height="15" fill="rgb(223,209,46)" fg:x="0" fg:w="20332"/><text x="0.2500%" y="735.50"></text></g><g><title>tiny_voxel`tiny_voxel::run::_{{closure}} (22 samples, 0.11%)</title><rect x="99.8918%" y="709" width="0.1082%" height="15" fill="rgb(250,43,18)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="719.50"></text></g><g><title>tiny_voxel`winit::window::Window::set_cursor_grab (22 samples, 0.11%)</title><rect x="99.8918%" y="693" width="0.1082%" height="15" fill="rgb(208,13,10)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="703.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::event_loop::EventLoop&lt;T&gt;::run (22 samples, 0.11%)</title><rect x="99.8918%" y="677" width="0.1082%" height="15" fill="rgb(212,200,36)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="687.50"></text></g><g><title>AppKit`-[NSApplication run] (22 samples, 0.11%)</title><rect x="99.8918%" y="661" width="0.1082%" height="15" fill="rgb(225,90,30)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="671.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (22 samples, 0.11%)</title><rect x="99.8918%" y="645" width="0.1082%" height="15" fill="rgb(236,182,39)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="655.50"></text></g><g><title>AppKit`_DPSNextEvent (22 samples, 0.11%)</title><rect x="99.8918%" y="629" width="0.1082%" height="15" fill="rgb(212,144,35)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="639.50"></text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (22 samples, 0.11%)</title><rect x="99.8918%" y="613" width="0.1082%" height="15" fill="rgb(228,63,44)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="623.50"></text></g><g><title>HIToolbox`ReceiveNextEventCommon (22 samples, 0.11%)</title><rect x="99.8918%" y="597" width="0.1082%" height="15" fill="rgb(228,109,6)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="607.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (22 samples, 0.11%)</title><rect x="99.8918%" y="581" width="0.1082%" height="15" fill="rgb(238,117,24)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="591.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (22 samples, 0.11%)</title><rect x="99.8918%" y="565" width="0.1082%" height="15" fill="rgb(242,26,26)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="575.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (22 samples, 0.11%)</title><rect x="99.8918%" y="549" width="0.1082%" height="15" fill="rgb(221,92,48)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="559.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (22 samples, 0.11%)</title><rect x="99.8918%" y="533" width="0.1082%" height="15" fill="rgb(209,209,32)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="543.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (22 samples, 0.11%)</title><rect x="99.8918%" y="517" width="0.1082%" height="15" fill="rgb(221,70,22)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="527.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::observer::control_flow_end_handler (22 samples, 0.11%)</title><rect x="99.8918%" y="501" width="0.1082%" height="15" fill="rgb(248,145,5)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="511.50"></text></g><g><title>tiny_voxel`std::panicking::try (22 samples, 0.11%)</title><rect x="99.8918%" y="485" width="0.1082%" height="15" fill="rgb(226,116,26)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="495.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::app_state::AppState::cleared (22 samples, 0.11%)</title><rect x="99.8918%" y="469" width="0.1082%" height="15" fill="rgb(244,5,17)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="479.50"></text></g><g><title>tiny_voxel`winit::platform_impl::platform::app_state::Handler::handle_nonuser_event (22 samples, 0.11%)</title><rect x="99.8918%" y="453" width="0.1082%" height="15" fill="rgb(252,159,33)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="463.50"></text></g><g><title>tiny_voxel`&lt;winit::platform_impl::platform::app_state::EventLoopHandler&lt;T&gt; as winit::platform_impl::platform::app_state::EventHandler&gt;::handle_nonuser_event (22 samples, 0.11%)</title><rect x="99.8918%" y="437" width="0.1082%" height="15" fill="rgb(206,71,0)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="447.50"></text></g><g><title>tiny_voxel`tiny_voxel::run::_{{closure}}::_{{closure}} (22 samples, 0.11%)</title><rect x="99.8918%" y="421" width="0.1082%" height="15" fill="rgb(233,118,54)" fg:x="20310" fg:w="22"/><text x="100.1418%" y="431.50"></text></g><g><title>tiny_voxel`tiny_voxel::State::update (14 samples, 0.07%)</title><rect x="99.9311%" y="405" width="0.0689%" height="15" fill="rgb(234,83,48)" fg:x="20318" fg:w="14"/><text x="100.1811%" y="415.50"></text></g></svg></svg>